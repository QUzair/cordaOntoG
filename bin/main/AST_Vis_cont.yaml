- member(Type=MethodDeclaration): 
    body(Type=BlockStmt): 
        statements: 
            - statement(Type=ExpressionStmt): 
                expression(Type=MethodCallExpr): 
                    name(Type=SimpleName): 
                        identifier: "requireThat"
                    arguments: 
                        - argument(Type=LambdaExpr): 
                            isEnclosingParameters: "false"
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=CastExpr): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "get"
                                                            scope(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "getOutputStates"
                                                                scope(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "tx"
                                                            arguments: 
                                                                - argument(Type=IntegerLiteralExpr): 
                                                                    value: "0"
                                                        type(Type=ClassOrInterfaceType): 
                                                            name(Type=SimpleName): 
                                                                identifier: "TemplateState"
                                                    name(Type=SimpleName): 
                                                        identifier: "iouState"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "TemplateState"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "using"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "req"
                                            arguments: 
                                                - argument(Type=StringLiteralExpr): 
                                                    value: "No inputs should be consumed when issuing an obligation."
                                                - argument(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "isEmpty"
                                                    scope(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getInputStates"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "tx"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "using"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "req"
                                            arguments: 
                                                - argument(Type=StringLiteralExpr): 
                                                    value: "Only one obligation state should be created when issuing an obligation."
                                                - argument(Type=BinaryExpr): 
                                                    operator: "EQUALS"
                                                    left(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "size"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "getOutputStates"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "tx"
                                                    right(Type=IntegerLiteralExpr): 
                                                        value: "1"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "using"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "req"
                                            arguments: 
                                                - argument(Type=StringLiteralExpr): 
                                                    value: "A newly issued obligation must have a positive amount."
                                                - argument(Type=BinaryExpr): 
                                                    operator: "GREATER"
                                                    left(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getValue"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "iouState"
                                                    right(Type=IntegerLiteralExpr): 
                                                        value: "0"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "using"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "req"
                                            arguments: 
                                                - argument(Type=StringLiteralExpr): 
                                                    value: "The lender and borrower cannot be the same identity."
                                                - argument(Type=UnaryExpr): 
                                                    operator: "LOGICAL_COMPLEMENT"
                                                    expression(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "equals"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "getBorrower"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "iouState"
                                                        arguments: 
                                                            - argument(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "getLender"
                                                                scope(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "iouState"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "using"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "req"
                                            arguments: 
                                                - argument(Type=StringLiteralExpr): 
                                                    value: "Both lender and borrower together only may sign obligation issue transaction."
                                                - argument(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "equals"
                                                    scope(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "signers"
                                                    arguments: 
                                                        - argument(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "keysFromParticipants"
                                                            arguments: 
                                                                - argument(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "iouState"
                                    - statement(Type=ReturnStmt): 
                                        expression(Type=NullLiteralExpr): 
                            parameters: 
                                - parameter(Type=Parameter): 
                                    isVarArgs: "false"
                                    name(Type=SimpleName): 
                                        identifier: "req"
                                    type(Type=UnknownType): 
    type(Type=VoidType): 
    name(Type=SimpleName): 
        identifier: "verifyIssue"
    modifiers: 
        - modifier(Type=Modifier): 
            keyword: "PRIVATE"
    parameters: 
        - parameter(Type=Parameter): 
            isVarArgs: "false"
            name(Type=SimpleName): 
                identifier: "tx"
            type(Type=ClassOrInterfaceType): 
                name(Type=SimpleName): 
                    identifier: "LedgerTransaction"
        - parameter(Type=Parameter): 
            isVarArgs: "false"
            name(Type=SimpleName): 
                identifier: "signers"
            type(Type=ClassOrInterfaceType): 
                name(Type=SimpleName): 
                    identifier: "Set"
                typeArguments: 
                    - typeArgument(Type=ClassOrInterfaceType): 
                        name(Type=SimpleName): 
                            identifier: "PublicKey"