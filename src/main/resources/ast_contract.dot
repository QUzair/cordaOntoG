digraph {
n0 [label="root (CompilationUnit)"];
n1 [label="packageDeclaration (PackageDeclaration)"];
n0 -> n1;
n2 [label="name (Name)"];
n1 -> n2;
n3 [label="identifier='templates'"];
n2 -> n3;
n4 [label="imports"];
n0 -> n4;
n5 [label="import (ImportDeclaration)"];
n4 -> n5;
n6 [label="isAsterisk='false'"];
n5 -> n6;
n7 [label="isStatic='false'"];
n5 -> n7;
n8 [label="name (Name)"];
n5 -> n8;
n9 [label="identifier='Sets'"];
n8 -> n9;
n10 [label="qualifier (Name)"];
n8 -> n10;
n11 [label="identifier='collect'"];
n10 -> n11;
n12 [label="qualifier (Name)"];
n10 -> n12;
n13 [label="identifier='common'"];
n12 -> n13;
n14 [label="qualifier (Name)"];
n12 -> n14;
n15 [label="identifier='google'"];
n14 -> n15;
n16 [label="qualifier (Name)"];
n14 -> n16;
n17 [label="identifier='com'"];
n16 -> n17;
n18 [label="import (ImportDeclaration)"];
n4 -> n18;
n19 [label="isAsterisk='true'"];
n18 -> n19;
n20 [label="isStatic='false'"];
n18 -> n20;
n21 [label="name (Name)"];
n18 -> n21;
n22 [label="identifier='contracts'"];
n21 -> n22;
n23 [label="qualifier (Name)"];
n21 -> n23;
n24 [label="identifier='core'"];
n23 -> n24;
n25 [label="qualifier (Name)"];
n23 -> n25;
n26 [label="identifier='corda'"];
n25 -> n26;
n27 [label="qualifier (Name)"];
n25 -> n27;
n28 [label="identifier='net'"];
n27 -> n28;
n29 [label="import (ImportDeclaration)"];
n4 -> n29;
n30 [label="isAsterisk='false'"];
n29 -> n30;
n31 [label="isStatic='false'"];
n29 -> n31;
n32 [label="name (Name)"];
n29 -> n32;
n33 [label="identifier='AbstractParty'"];
n32 -> n33;
n34 [label="qualifier (Name)"];
n32 -> n34;
n35 [label="identifier='identity'"];
n34 -> n35;
n36 [label="qualifier (Name)"];
n34 -> n36;
n37 [label="identifier='core'"];
n36 -> n37;
n38 [label="qualifier (Name)"];
n36 -> n38;
n39 [label="identifier='corda'"];
n38 -> n39;
n40 [label="qualifier (Name)"];
n38 -> n40;
n41 [label="identifier='net'"];
n40 -> n41;
n42 [label="import (ImportDeclaration)"];
n4 -> n42;
n43 [label="isAsterisk='false'"];
n42 -> n43;
n44 [label="isStatic='false'"];
n42 -> n44;
n45 [label="name (Name)"];
n42 -> n45;
n46 [label="identifier='LedgerTransaction'"];
n45 -> n46;
n47 [label="qualifier (Name)"];
n45 -> n47;
n48 [label="identifier='transactions'"];
n47 -> n48;
n49 [label="qualifier (Name)"];
n47 -> n49;
n50 [label="identifier='core'"];
n49 -> n50;
n51 [label="qualifier (Name)"];
n49 -> n51;
n52 [label="identifier='corda'"];
n51 -> n52;
n53 [label="qualifier (Name)"];
n51 -> n53;
n54 [label="identifier='net'"];
n53 -> n54;
n55 [label="import (ImportDeclaration)"];
n4 -> n55;
n56 [label="isAsterisk='false'"];
n55 -> n56;
n57 [label="isStatic='false'"];
n55 -> n57;
n58 [label="name (Name)"];
n55 -> n58;
n59 [label="identifier='Cash'"];
n58 -> n59;
n60 [label="qualifier (Name)"];
n58 -> n60;
n61 [label="identifier='asset'"];
n60 -> n61;
n62 [label="qualifier (Name)"];
n60 -> n62;
n63 [label="identifier='contracts'"];
n62 -> n63;
n64 [label="qualifier (Name)"];
n62 -> n64;
n65 [label="identifier='finance'"];
n64 -> n65;
n66 [label="qualifier (Name)"];
n64 -> n66;
n67 [label="identifier='corda'"];
n66 -> n67;
n68 [label="qualifier (Name)"];
n66 -> n68;
n69 [label="identifier='net'"];
n68 -> n69;
n70 [label="import (ImportDeclaration)"];
n4 -> n70;
n71 [label="isAsterisk='false'"];
n70 -> n71;
n72 [label="isStatic='false'"];
n70 -> n72;
n73 [label="name (Name)"];
n70 -> n73;
n74 [label="identifier='PublicKey'"];
n73 -> n74;
n75 [label="qualifier (Name)"];
n73 -> n75;
n76 [label="identifier='security'"];
n75 -> n76;
n77 [label="qualifier (Name)"];
n75 -> n77;
n78 [label="identifier='java'"];
n77 -> n78;
n79 [label="import (ImportDeclaration)"];
n4 -> n79;
n80 [label="isAsterisk='false'"];
n79 -> n80;
n81 [label="isStatic='false'"];
n79 -> n81;
n82 [label="name (Name)"];
n79 -> n82;
n83 [label="identifier='HashSet'"];
n82 -> n83;
n84 [label="qualifier (Name)"];
n82 -> n84;
n85 [label="identifier='util'"];
n84 -> n85;
n86 [label="qualifier (Name)"];
n84 -> n86;
n87 [label="identifier='java'"];
n86 -> n87;
n88 [label="import (ImportDeclaration)"];
n4 -> n88;
n89 [label="isAsterisk='false'"];
n88 -> n89;
n90 [label="isStatic='false'"];
n88 -> n90;
n91 [label="name (Name)"];
n88 -> n91;
n92 [label="identifier='List'"];
n91 -> n92;
n93 [label="qualifier (Name)"];
n91 -> n93;
n94 [label="identifier='util'"];
n93 -> n94;
n95 [label="qualifier (Name)"];
n93 -> n95;
n96 [label="identifier='java'"];
n95 -> n96;
n97 [label="import (ImportDeclaration)"];
n4 -> n97;
n98 [label="isAsterisk='false'"];
n97 -> n98;
n99 [label="isStatic='false'"];
n97 -> n99;
n100 [label="name (Name)"];
n97 -> n100;
n101 [label="identifier='Set'"];
n100 -> n101;
n102 [label="qualifier (Name)"];
n100 -> n102;
n103 [label="identifier='util'"];
n102 -> n103;
n104 [label="qualifier (Name)"];
n102 -> n104;
n105 [label="identifier='java'"];
n104 -> n105;
n106 [label="import (ImportDeclaration)"];
n4 -> n106;
n107 [label="isAsterisk='false'"];
n106 -> n107;
n108 [label="isStatic='false'"];
n106 -> n108;
n109 [label="name (Name)"];
n106 -> n109;
n110 [label="identifier='Collectors'"];
n109 -> n110;
n111 [label="qualifier (Name)"];
n109 -> n111;
n112 [label="identifier='stream'"];
n111 -> n112;
n113 [label="qualifier (Name)"];
n111 -> n113;
n114 [label="identifier='util'"];
n113 -> n114;
n115 [label="qualifier (Name)"];
n113 -> n115;
n116 [label="identifier='java'"];
n115 -> n116;
n117 [label="import (ImportDeclaration)"];
n4 -> n117;
n118 [label="isAsterisk='false'"];
n117 -> n118;
n119 [label="isStatic='true'"];
n117 -> n119;
n120 [label="name (Name)"];
n117 -> n120;
n121 [label="identifier='toSet'"];
n120 -> n121;
n122 [label="qualifier (Name)"];
n120 -> n122;
n123 [label="identifier='Collectors'"];
n122 -> n123;
n124 [label="qualifier (Name)"];
n122 -> n124;
n125 [label="identifier='stream'"];
n124 -> n125;
n126 [label="qualifier (Name)"];
n124 -> n126;
n127 [label="identifier='util'"];
n126 -> n127;
n128 [label="qualifier (Name)"];
n126 -> n128;
n129 [label="identifier='java'"];
n128 -> n129;
n130 [label="import (ImportDeclaration)"];
n4 -> n130;
n131 [label="isAsterisk='false'"];
n130 -> n131;
n132 [label="isStatic='true'"];
n130 -> n132;
n133 [label="name (Name)"];
n130 -> n133;
n134 [label="identifier='requireSingleCommand'"];
n133 -> n134;
n135 [label="qualifier (Name)"];
n133 -> n135;
n136 [label="identifier='ContractsDSL'"];
n135 -> n136;
n137 [label="qualifier (Name)"];
n135 -> n137;
n138 [label="identifier='contracts'"];
n137 -> n138;
n139 [label="qualifier (Name)"];
n137 -> n139;
n140 [label="identifier='core'"];
n139 -> n140;
n141 [label="qualifier (Name)"];
n139 -> n141;
n142 [label="identifier='corda'"];
n141 -> n142;
n143 [label="qualifier (Name)"];
n141 -> n143;
n144 [label="identifier='net'"];
n143 -> n144;
n145 [label="import (ImportDeclaration)"];
n4 -> n145;
n146 [label="isAsterisk='false'"];
n145 -> n146;
n147 [label="isStatic='true'"];
n145 -> n147;
n148 [label="name (Name)"];
n145 -> n148;
n149 [label="identifier='requireThat'"];
n148 -> n149;
n150 [label="qualifier (Name)"];
n148 -> n150;
n151 [label="identifier='ContractsDSL'"];
n150 -> n151;
n152 [label="qualifier (Name)"];
n150 -> n152;
n153 [label="identifier='contracts'"];
n152 -> n153;
n154 [label="qualifier (Name)"];
n152 -> n154;
n155 [label="identifier='core'"];
n154 -> n155;
n156 [label="qualifier (Name)"];
n154 -> n156;
n157 [label="identifier='corda'"];
n156 -> n157;
n158 [label="qualifier (Name)"];
n156 -> n158;
n159 [label="identifier='net'"];
n158 -> n159;
n160 [label="import (ImportDeclaration)"];
n4 -> n160;
n161 [label="isAsterisk='false'"];
n160 -> n161;
n162 [label="isStatic='true'"];
n160 -> n162;
n163 [label="name (Name)"];
n160 -> n163;
n164 [label="identifier='withoutIssuer'"];
n163 -> n164;
n165 [label="qualifier (Name)"];
n163 -> n165;
n166 [label="identifier='Structures'"];
n165 -> n166;
n167 [label="qualifier (Name)"];
n165 -> n167;
n168 [label="identifier='contracts'"];
n167 -> n168;
n169 [label="qualifier (Name)"];
n167 -> n169;
n170 [label="identifier='core'"];
n169 -> n170;
n171 [label="qualifier (Name)"];
n169 -> n171;
n172 [label="identifier='corda'"];
n171 -> n172;
n173 [label="qualifier (Name)"];
n171 -> n173;
n174 [label="identifier='net'"];
n173 -> n174;
n175 [label="import (ImportDeclaration)"];
n4 -> n175;
n176 [label="isAsterisk='false'"];
n175 -> n176;
n177 [label="isStatic='true'"];
n175 -> n177;
n178 [label="name (Name)"];
n175 -> n178;
n179 [label="identifier='sumCash'"];
n178 -> n179;
n180 [label="qualifier (Name)"];
n178 -> n180;
n181 [label="identifier='StateSumming'"];
n180 -> n181;
n182 [label="qualifier (Name)"];
n180 -> n182;
n183 [label="identifier='utils'"];
n182 -> n183;
n184 [label="qualifier (Name)"];
n182 -> n184;
n185 [label="identifier='contracts'"];
n184 -> n185;
n186 [label="qualifier (Name)"];
n184 -> n186;
n187 [label="identifier='finance'"];
n186 -> n187;
n188 [label="qualifier (Name)"];
n186 -> n188;
n189 [label="identifier='corda'"];
n188 -> n189;
n190 [label="qualifier (Name)"];
n188 -> n190;
n191 [label="identifier='net'"];
n190 -> n191;
n192 [label="types"];
n0 -> n192;
n193 [label="type (ClassOrInterfaceDeclaration)"];
n192 -> n193;
n194 [label="isInterface='false'"];
n193 -> n194;
n195 [label="name (SimpleName)"];
n193 -> n195;
n196 [label="identifier='IOUContract'"];
n195 -> n196;
n197 [label="implementedTypes"];
n193 -> n197;
n198 [label="implementedType (ClassOrInterfaceType)"];
n197 -> n198;
n199 [label="name (SimpleName)"];
n198 -> n199;
n200 [label="identifier='Contract'"];
n199 -> n200;
n201 [label="members"];
n193 -> n201;
n202 [label="member (FieldDeclaration)"];
n201 -> n202;
n203 [label="modifiers"];
n202 -> n203;
n204 [label="modifier (Modifier)"];
n203 -> n204;
n205 [label="keyword='PUBLIC'"];
n204 -> n205;
n206 [label="modifier (Modifier)"];
n203 -> n206;
n207 [label="keyword='STATIC'"];
n206 -> n207;
n208 [label="modifier (Modifier)"];
n203 -> n208;
n209 [label="keyword='FINAL'"];
n208 -> n209;
n210 [label="variables"];
n202 -> n210;
n211 [label="variable (VariableDeclarator)"];
n210 -> n211;
n212 [label="initializer (StringLiteralExpr)"];
n211 -> n212;
n213 [label="value='com.example.contract.IOUContract'"];
n212 -> n213;
n214 [label="name (SimpleName)"];
n211 -> n214;
n215 [label="identifier='ID'"];
n214 -> n215;
n216 [label="type (ClassOrInterfaceType)"];
n211 -> n216;
n217 [label="name (SimpleName)"];
n216 -> n217;
n218 [label="identifier='String'"];
n217 -> n218;
n219 [label="member (ClassOrInterfaceDeclaration)"];
n201 -> n219;
n220 [label="isInterface='true'"];
n219 -> n220;
n221 [label="name (SimpleName)"];
n219 -> n221;
n222 [label="identifier='Commands'"];
n221 -> n222;
n223 [label="extendedTypes"];
n219 -> n223;
n224 [label="extendedType (ClassOrInterfaceType)"];
n223 -> n224;
n225 [label="name (SimpleName)"];
n224 -> n225;
n226 [label="identifier='CommandData'"];
n225 -> n226;
n227 [label="members"];
n219 -> n227;
n228 [label="member (ClassOrInterfaceDeclaration)"];
n227 -> n228;
n229 [label="isInterface='false'"];
n228 -> n229;
n230 [label="name (SimpleName)"];
n228 -> n230;
n231 [label="identifier='Issue'"];
n230 -> n231;
n232 [label="extendedTypes"];
n228 -> n232;
n233 [label="extendedType (ClassOrInterfaceType)"];
n232 -> n233;
n234 [label="name (SimpleName)"];
n233 -> n234;
n235 [label="identifier='TypeOnlyCommandData'"];
n234 -> n235;
n236 [label="implementedTypes"];
n228 -> n236;
n237 [label="implementedType (ClassOrInterfaceType)"];
n236 -> n237;
n238 [label="name (SimpleName)"];
n237 -> n238;
n239 [label="identifier='Commands'"];
n238 -> n239;
n240 [label="member (ClassOrInterfaceDeclaration)"];
n227 -> n240;
n241 [label="isInterface='false'"];
n240 -> n241;
n242 [label="name (SimpleName)"];
n240 -> n242;
n243 [label="identifier='Transfer'"];
n242 -> n243;
n244 [label="extendedTypes"];
n240 -> n244;
n245 [label="extendedType (ClassOrInterfaceType)"];
n244 -> n245;
n246 [label="name (SimpleName)"];
n245 -> n246;
n247 [label="identifier='TypeOnlyCommandData'"];
n246 -> n247;
n248 [label="implementedTypes"];
n240 -> n248;
n249 [label="implementedType (ClassOrInterfaceType)"];
n248 -> n249;
n250 [label="name (SimpleName)"];
n249 -> n250;
n251 [label="identifier='Commands'"];
n250 -> n251;
n252 [label="member (ClassOrInterfaceDeclaration)"];
n227 -> n252;
n253 [label="isInterface='false'"];
n252 -> n253;
n254 [label="name (SimpleName)"];
n252 -> n254;
n255 [label="identifier='Settle'"];
n254 -> n255;
n256 [label="extendedTypes"];
n252 -> n256;
n257 [label="extendedType (ClassOrInterfaceType)"];
n256 -> n257;
n258 [label="name (SimpleName)"];
n257 -> n258;
n259 [label="identifier='TypeOnlyCommandData'"];
n258 -> n259;
n260 [label="implementedTypes"];
n252 -> n260;
n261 [label="implementedType (ClassOrInterfaceType)"];
n260 -> n261;
n262 [label="name (SimpleName)"];
n261 -> n262;
n263 [label="identifier='Commands'"];
n262 -> n263;
n264 [label="modifiers"];
n219 -> n264;
n265 [label="modifier (Modifier)"];
n264 -> n265;
n266 [label="keyword='PUBLIC'"];
n265 -> n266;
n267 [label="member (MethodDeclaration)"];
n201 -> n267;
n268 [label="body (BlockStmt)"];
n267 -> n268;
n269 [label="statements"];
n268 -> n269;
n270 [label="statement (ReturnStmt)"];
n269 -> n270;
n271 [label="expression (MethodCallExpr)"];
n270 -> n271;
n272 [label="name (SimpleName)"];
n271 -> n272;
n273 [label="identifier='collect'"];
n272 -> n273;
n274 [label="scope (MethodCallExpr)"];
n271 -> n274;
n275 [label="name (SimpleName)"];
n274 -> n275;
n276 [label="identifier='map'"];
n275 -> n276;
n277 [label="scope (MethodCallExpr)"];
n274 -> n277;
n278 [label="name (SimpleName)"];
n277 -> n278;
n279 [label="identifier='stream'"];
n278 -> n279;
n280 [label="scope (MethodCallExpr)"];
n277 -> n280;
n281 [label="name (SimpleName)"];
n280 -> n281;
n282 [label="identifier='getParticipants'"];
n281 -> n282;
n283 [label="scope (NameExpr)"];
n280 -> n283;
n284 [label="name (SimpleName)"];
n283 -> n284;
n285 [label="identifier='obligation'"];
n284 -> n285;
n286 [label="arguments"];
n274 -> n286;
n287 [label="argument (MethodReferenceExpr)"];
n286 -> n287;
n288 [label="identifier='getOwningKey'"];
n287 -> n288;
n289 [label="scope (TypeExpr)"];
n287 -> n289;
n290 [label="type (ClassOrInterfaceType)"];
n289 -> n290;
n291 [label="name (SimpleName)"];
n290 -> n291;
n292 [label="identifier='AbstractParty'"];
n291 -> n292;
n293 [label="arguments"];
n271 -> n293;
n294 [label="argument (MethodCallExpr)"];
n293 -> n294;
n295 [label="name (SimpleName)"];
n294 -> n295;
n296 [label="identifier='toSet'"];
n295 -> n296;
n297 [label="type (ClassOrInterfaceType)"];
n267 -> n297;
n298 [label="name (SimpleName)"];
n297 -> n298;
n299 [label="identifier='Set'"];
n298 -> n299;
n300 [label="typeArguments"];
n297 -> n300;
n301 [label="typeArgument (ClassOrInterfaceType)"];
n300 -> n301;
n302 [label="name (SimpleName)"];
n301 -> n302;
n303 [label="identifier='PublicKey'"];
n302 -> n303;
n304 [label="name (SimpleName)"];
n267 -> n304;
n305 [label="identifier='keysFromParticipants'"];
n304 -> n305;
n306 [label="modifiers"];
n267 -> n306;
n307 [label="modifier (Modifier)"];
n306 -> n307;
n308 [label="keyword='PRIVATE'"];
n307 -> n308;
n309 [label="parameters"];
n267 -> n309;
n310 [label="parameter (Parameter)"];
n309 -> n310;
n311 [label="isVarArgs='false'"];
n310 -> n311;
n312 [label="name (SimpleName)"];
n310 -> n312;
n313 [label="identifier='obligation'"];
n312 -> n313;
n314 [label="type (ClassOrInterfaceType)"];
n310 -> n314;
n315 [label="name (SimpleName)"];
n314 -> n315;
n316 [label="identifier='IOUState'"];
n315 -> n316;
n317 [label="member (MethodDeclaration)"];
n201 -> n317;
n318 [label="body (BlockStmt)"];
n317 -> n318;
n319 [label="statements"];
n318 -> n319;
n320 [label="statement (ExpressionStmt)"];
n319 -> n320;
n321 [label="expression (VariableDeclarationExpr)"];
n320 -> n321;
n322 [label="modifiers"];
n321 -> n322;
n323 [label="modifier (Modifier)"];
n322 -> n323;
n324 [label="keyword='FINAL'"];
n323 -> n324;
n325 [label="variables"];
n321 -> n325;
n326 [label="variable (VariableDeclarator)"];
n325 -> n326;
n327 [label="initializer (MethodCallExpr)"];
n326 -> n327;
n328 [label="name (SimpleName)"];
n327 -> n328;
n329 [label="identifier='requireSingleCommand'"];
n328 -> n329;
n330 [label="arguments"];
n327 -> n330;
n331 [label="argument (MethodCallExpr)"];
n330 -> n331;
n332 [label="name (SimpleName)"];
n331 -> n332;
n333 [label="identifier='getCommands'"];
n332 -> n333;
n334 [label="scope (NameExpr)"];
n331 -> n334;
n335 [label="name (SimpleName)"];
n334 -> n335;
n336 [label="identifier='tx'"];
n335 -> n336;
n337 [label="argument (ClassExpr)"];
n330 -> n337;
n338 [label="type (ClassOrInterfaceType)"];
n337 -> n338;
n339 [label="name (SimpleName)"];
n338 -> n339;
n340 [label="identifier='Commands'"];
n339 -> n340;
n341 [label="name (SimpleName)"];
n326 -> n341;
n342 [label="identifier='command'"];
n341 -> n342;
n343 [label="type (ClassOrInterfaceType)"];
n326 -> n343;
n344 [label="name (SimpleName)"];
n343 -> n344;
n345 [label="identifier='CommandWithParties'"];
n344 -> n345;
n346 [label="typeArguments"];
n343 -> n346;
n347 [label="typeArgument (ClassOrInterfaceType)"];
n346 -> n347;
n348 [label="name (SimpleName)"];
n347 -> n348;
n349 [label="identifier='Commands'"];
n348 -> n349;
n350 [label="statement (ExpressionStmt)"];
n319 -> n350;
n351 [label="expression (VariableDeclarationExpr)"];
n350 -> n351;
n352 [label="modifiers"];
n351 -> n352;
n353 [label="modifier (Modifier)"];
n352 -> n353;
n354 [label="keyword='FINAL'"];
n353 -> n354;
n355 [label="variables"];
n351 -> n355;
n356 [label="variable (VariableDeclarator)"];
n355 -> n356;
n357 [label="initializer (MethodCallExpr)"];
n356 -> n357;
n358 [label="name (SimpleName)"];
n357 -> n358;
n359 [label="identifier='getValue'"];
n358 -> n359;
n360 [label="scope (NameExpr)"];
n357 -> n360;
n361 [label="name (SimpleName)"];
n360 -> n361;
n362 [label="identifier='command'"];
n361 -> n362;
n363 [label="name (SimpleName)"];
n356 -> n363;
n364 [label="identifier='commandData'"];
n363 -> n364;
n365 [label="type (ClassOrInterfaceType)"];
n356 -> n365;
n366 [label="name (SimpleName)"];
n365 -> n366;
n367 [label="identifier='Commands'"];
n366 -> n367;
n368 [label="statement (ExpressionStmt)"];
n319 -> n368;
n369 [label="expression (VariableDeclarationExpr)"];
n368 -> n369;
n370 [label="modifiers"];
n369 -> n370;
n371 [label="modifier (Modifier)"];
n370 -> n371;
n372 [label="keyword='FINAL'"];
n371 -> n372;
n373 [label="variables"];
n369 -> n373;
n374 [label="variable (VariableDeclarator)"];
n373 -> n374;
n375 [label="initializer (ObjectCreationExpr)"];
n374 -> n375;
n376 [label="type (ClassOrInterfaceType)"];
n375 -> n376;
n377 [label="name (SimpleName)"];
n376 -> n377;
n378 [label="identifier='HashSet'"];
n377 -> n378;
n379 [label="arguments"];
n375 -> n379;
n380 [label="argument (MethodCallExpr)"];
n379 -> n380;
n381 [label="name (SimpleName)"];
n380 -> n381;
n382 [label="identifier='getSigners'"];
n381 -> n382;
n383 [label="scope (NameExpr)"];
n380 -> n383;
n384 [label="name (SimpleName)"];
n383 -> n384;
n385 [label="identifier='command'"];
n384 -> n385;
n386 [label="name (SimpleName)"];
n374 -> n386;
n387 [label="identifier='setOfSigners'"];
n386 -> n387;
n388 [label="type (ClassOrInterfaceType)"];
n374 -> n388;
n389 [label="name (SimpleName)"];
n388 -> n389;
n390 [label="identifier='Set'"];
n389 -> n390;
n391 [label="typeArguments"];
n388 -> n391;
n392 [label="typeArgument (ClassOrInterfaceType)"];
n391 -> n392;
n393 [label="name (SimpleName)"];
n392 -> n393;
n394 [label="identifier='PublicKey'"];
n393 -> n394;
n395 [label="statement (IfStmt)"];
n319 -> n395;
n396 [label="condition (InstanceOfExpr)"];
n395 -> n396;
n397 [label="expression (NameExpr)"];
n396 -> n397;
n398 [label="name (SimpleName)"];
n397 -> n398;
n399 [label="identifier='commandData'"];
n398 -> n399;
n400 [label="type (ClassOrInterfaceType)"];
n396 -> n400;
n401 [label="name (SimpleName)"];
n400 -> n401;
n402 [label="identifier='Issue'"];
n401 -> n402;
n403 [label="scope (ClassOrInterfaceType)"];
n400 -> n403;
n404 [label="name (SimpleName)"];
n403 -> n404;
n405 [label="identifier='Commands'"];
n404 -> n405;
n406 [label="elseStmt (IfStmt)"];
n395 -> n406;
n407 [label="condition (InstanceOfExpr)"];
n406 -> n407;
n408 [label="expression (NameExpr)"];
n407 -> n408;
n409 [label="name (SimpleName)"];
n408 -> n409;
n410 [label="identifier='commandData'"];
n409 -> n410;
n411 [label="type (ClassOrInterfaceType)"];
n407 -> n411;
n412 [label="name (SimpleName)"];
n411 -> n412;
n413 [label="identifier='Settle'"];
n412 -> n413;
n414 [label="scope (ClassOrInterfaceType)"];
n411 -> n414;
n415 [label="name (SimpleName)"];
n414 -> n415;
n416 [label="identifier='Commands'"];
n415 -> n416;
n417 [label="elseStmt (BlockStmt)"];
n406 -> n417;
n418 [label="statements"];
n417 -> n418;
n419 [label="statement (ThrowStmt)"];
n418 -> n419;
n420 [label="expression (ObjectCreationExpr)"];
n419 -> n420;
n421 [label="type (ClassOrInterfaceType)"];
n420 -> n421;
n422 [label="name (SimpleName)"];
n421 -> n422;
n423 [label="identifier='IllegalArgumentException'"];
n422 -> n423;
n424 [label="arguments"];
n420 -> n424;
n425 [label="argument (StringLiteralExpr)"];
n424 -> n425;
n426 [label="value='Unrecognised command.'"];
n425 -> n426;
n427 [label="thenStmt (BlockStmt)"];
n406 -> n427;
n428 [label="statements"];
n427 -> n428;
n429 [label="statement (ExpressionStmt)"];
n428 -> n429;
n430 [label="expression (MethodCallExpr)"];
n429 -> n430;
n431 [label="name (SimpleName)"];
n430 -> n431;
n432 [label="identifier='verifySettle'"];
n431 -> n432;
n433 [label="arguments"];
n430 -> n433;
n434 [label="argument (NameExpr)"];
n433 -> n434;
n435 [label="name (SimpleName)"];
n434 -> n435;
n436 [label="identifier='tx'"];
n435 -> n436;
n437 [label="argument (NameExpr)"];
n433 -> n437;
n438 [label="name (SimpleName)"];
n437 -> n438;
n439 [label="identifier='setOfSigners'"];
n438 -> n439;
n440 [label="thenStmt (BlockStmt)"];
n395 -> n440;
n441 [label="statements"];
n440 -> n441;
n442 [label="statement (ExpressionStmt)"];
n441 -> n442;
n443 [label="expression (MethodCallExpr)"];
n442 -> n443;
n444 [label="name (SimpleName)"];
n443 -> n444;
n445 [label="identifier='verifyIssue'"];
n444 -> n445;
n446 [label="arguments"];
n443 -> n446;
n447 [label="argument (NameExpr)"];
n446 -> n447;
n448 [label="name (SimpleName)"];
n447 -> n448;
n449 [label="identifier='tx'"];
n448 -> n449;
n450 [label="argument (NameExpr)"];
n446 -> n450;
n451 [label="name (SimpleName)"];
n450 -> n451;
n452 [label="identifier='setOfSigners'"];
n451 -> n452;
n453 [label="type (VoidType)"];
n317 -> n453;
n454 [label="name (SimpleName)"];
n317 -> n454;
n455 [label="identifier='verify'"];
n454 -> n455;
n456 [label="modifiers"];
n317 -> n456;
n457 [label="modifier (Modifier)"];
n456 -> n457;
n458 [label="keyword='PUBLIC'"];
n457 -> n458;
n459 [label="parameters"];
n317 -> n459;
n460 [label="parameter (Parameter)"];
n459 -> n460;
n461 [label="isVarArgs='false'"];
n460 -> n461;
n462 [label="name (SimpleName)"];
n460 -> n462;
n463 [label="identifier='tx'"];
n462 -> n463;
n464 [label="type (ClassOrInterfaceType)"];
n460 -> n464;
n465 [label="name (SimpleName)"];
n464 -> n465;
n466 [label="identifier='LedgerTransaction'"];
n465 -> n466;
n467 [label="annotations"];
n317 -> n467;
n468 [label="annotation (MarkerAnnotationExpr)"];
n467 -> n468;
n469 [label="name (Name)"];
n468 -> n469;
n470 [label="identifier='Override'"];
n469 -> n470;
n471 [label="member (MethodDeclaration)"];
n201 -> n471;
n472 [label="body (BlockStmt)"];
n471 -> n472;
n473 [label="statements"];
n472 -> n473;
n474 [label="statement (ExpressionStmt)"];
n473 -> n474;
n475 [label="expression (MethodCallExpr)"];
n474 -> n475;
n476 [label="name (SimpleName)"];
n475 -> n476;
n477 [label="identifier='requireThat'"];
n476 -> n477;
n478 [label="arguments"];
n475 -> n478;
n479 [label="argument (LambdaExpr)"];
n478 -> n479;
n480 [label="isEnclosingParameters='false'"];
n479 -> n480;
n481 [label="body (BlockStmt)"];
n479 -> n481;
n482 [label="statements"];
n481 -> n482;
n483 [label="statement (ExpressionStmt)"];
n482 -> n483;
n484 [label="expression (VariableDeclarationExpr)"];
n483 -> n484;
n485 [label="variables"];
n484 -> n485;
n486 [label="variable (VariableDeclarator)"];
n485 -> n486;
n487 [label="initializer (CastExpr)"];
n486 -> n487;
n488 [label="expression (MethodCallExpr)"];
n487 -> n488;
n489 [label="name (SimpleName)"];
n488 -> n489;
n490 [label="identifier='get'"];
n489 -> n490;
n491 [label="scope (MethodCallExpr)"];
n488 -> n491;
n492 [label="name (SimpleName)"];
n491 -> n492;
n493 [label="identifier='getOutputStates'"];
n492 -> n493;
n494 [label="scope (NameExpr)"];
n491 -> n494;
n495 [label="name (SimpleName)"];
n494 -> n495;
n496 [label="identifier='tx'"];
n495 -> n496;
n497 [label="arguments"];
n488 -> n497;
n498 [label="argument (IntegerLiteralExpr)"];
n497 -> n498;
n499 [label="value='0'"];
n498 -> n499;
n500 [label="type (ClassOrInterfaceType)"];
n487 -> n500;
n501 [label="name (SimpleName)"];
n500 -> n501;
n502 [label="identifier='IOUState'"];
n501 -> n502;
n503 [label="name (SimpleName)"];
n486 -> n503;
n504 [label="identifier='obligation'"];
n503 -> n504;
n505 [label="type (ClassOrInterfaceType)"];
n486 -> n505;
n506 [label="name (SimpleName)"];
n505 -> n506;
n507 [label="identifier='IOUState'"];
n506 -> n507;
n508 [label="statement (ExpressionStmt)"];
n482 -> n508;
n509 [label="expression (MethodCallExpr)"];
n508 -> n509;
n510 [label="name (SimpleName)"];
n509 -> n510;
n511 [label="identifier='using'"];
n510 -> n511;
n512 [label="scope (NameExpr)"];
n509 -> n512;
n513 [label="name (SimpleName)"];
n512 -> n513;
n514 [label="identifier='req'"];
n513 -> n514;
n515 [label="arguments"];
n509 -> n515;
n516 [label="argument (StringLiteralExpr)"];
n515 -> n516;
n517 [label="value='No inputs should be consumed when issuing an obligation.'"];
n516 -> n517;
n518 [label="argument (BinaryExpr)"];
n515 -> n518;
n519 [label="operator='EQUALS'"];
n518 -> n519;
n520 [label="left (MethodCallExpr)"];
n518 -> n520;
n521 [label="name (SimpleName)"];
n520 -> n521;
n522 [label="identifier='size'"];
n521 -> n522;
n523 [label="scope (MethodCallExpr)"];
n520 -> n523;
n524 [label="name (SimpleName)"];
n523 -> n524;
n525 [label="identifier='getInputStates'"];
n524 -> n525;
n526 [label="scope (NameExpr)"];
n523 -> n526;
n527 [label="name (SimpleName)"];
n526 -> n527;
n528 [label="identifier='tx'"];
n527 -> n528;
n529 [label="right (IntegerLiteralExpr)"];
n518 -> n529;
n530 [label="value='0'"];
n529 -> n530;
n531 [label="statement (ExpressionStmt)"];
n482 -> n531;
n532 [label="expression (MethodCallExpr)"];
n531 -> n532;
n533 [label="name (SimpleName)"];
n532 -> n533;
n534 [label="identifier='using'"];
n533 -> n534;
n535 [label="scope (NameExpr)"];
n532 -> n535;
n536 [label="name (SimpleName)"];
n535 -> n536;
n537 [label="identifier='req'"];
n536 -> n537;
n538 [label="arguments"];
n532 -> n538;
n539 [label="argument (StringLiteralExpr)"];
n538 -> n539;
n540 [label="value='Only one obligation state should be created when issuing an obligation.'"];
n539 -> n540;
n541 [label="argument (BinaryExpr)"];
n538 -> n541;
n542 [label="operator='EQUALS'"];
n541 -> n542;
n543 [label="left (MethodCallExpr)"];
n541 -> n543;
n544 [label="name (SimpleName)"];
n543 -> n544;
n545 [label="identifier='size'"];
n544 -> n545;
n546 [label="scope (MethodCallExpr)"];
n543 -> n546;
n547 [label="name (SimpleName)"];
n546 -> n547;
n548 [label="identifier='getOutputStates'"];
n547 -> n548;
n549 [label="scope (NameExpr)"];
n546 -> n549;
n550 [label="name (SimpleName)"];
n549 -> n550;
n551 [label="identifier='tx'"];
n550 -> n551;
n552 [label="right (IntegerLiteralExpr)"];
n541 -> n552;
n553 [label="value='1'"];
n552 -> n553;
n554 [label="statement (ExpressionStmt)"];
n482 -> n554;
n555 [label="expression (MethodCallExpr)"];
n554 -> n555;
n556 [label="name (SimpleName)"];
n555 -> n556;
n557 [label="identifier='using'"];
n556 -> n557;
n558 [label="scope (NameExpr)"];
n555 -> n558;
n559 [label="name (SimpleName)"];
n558 -> n559;
n560 [label="identifier='req'"];
n559 -> n560;
n561 [label="arguments"];
n555 -> n561;
n562 [label="argument (StringLiteralExpr)"];
n561 -> n562;
n563 [label="value='A newly issued obligation must have a positive amount.'"];
n562 -> n563;
n564 [label="argument (BinaryExpr)"];
n561 -> n564;
n565 [label="operator='GREATER'"];
n564 -> n565;
n566 [label="left (MethodCallExpr)"];
n564 -> n566;
n567 [label="name (SimpleName)"];
n566 -> n567;
n568 [label="identifier='getQuantity'"];
n567 -> n568;
n569 [label="scope (MethodCallExpr)"];
n566 -> n569;
n570 [label="name (SimpleName)"];
n569 -> n570;
n571 [label="identifier='getValue'"];
n570 -> n571;
n572 [label="scope (NameExpr)"];
n569 -> n572;
n573 [label="name (SimpleName)"];
n572 -> n573;
n574 [label="identifier='obligation'"];
n573 -> n574;
n575 [label="right (IntegerLiteralExpr)"];
n564 -> n575;
n576 [label="value='0'"];
n575 -> n576;
n577 [label="statement (ExpressionStmt)"];
n482 -> n577;
n578 [label="expression (MethodCallExpr)"];
n577 -> n578;
n579 [label="name (SimpleName)"];
n578 -> n579;
n580 [label="identifier='using'"];
n579 -> n580;
n581 [label="scope (NameExpr)"];
n578 -> n581;
n582 [label="name (SimpleName)"];
n581 -> n582;
n583 [label="identifier='req'"];
n582 -> n583;
n584 [label="arguments"];
n578 -> n584;
n585 [label="argument (StringLiteralExpr)"];
n584 -> n585;
n586 [label="value='A newly issued obligation must be less than $150.'"];
n585 -> n586;
n587 [label="argument (BinaryExpr)"];
n584 -> n587;
n588 [label="operator='LESS'"];
n587 -> n588;
n589 [label="left (MethodCallExpr)"];
n587 -> n589;
n590 [label="name (SimpleName)"];
n589 -> n590;
n591 [label="identifier='getQuantity'"];
n590 -> n591;
n592 [label="scope (MethodCallExpr)"];
n589 -> n592;
n593 [label="name (SimpleName)"];
n592 -> n593;
n594 [label="identifier='getValue'"];
n593 -> n594;
n595 [label="scope (NameExpr)"];
n592 -> n595;
n596 [label="name (SimpleName)"];
n595 -> n596;
n597 [label="identifier='obligation'"];
n596 -> n597;
n598 [label="right (BinaryExpr)"];
n587 -> n598;
n599 [label="operator='MULTIPLY'"];
n598 -> n599;
n600 [label="left (IntegerLiteralExpr)"];
n598 -> n600;
n601 [label="value='150'"];
n600 -> n601;
n602 [label="right (IntegerLiteralExpr)"];
n598 -> n602;
n603 [label="value='100'"];
n602 -> n603;
n604 [label="statement (ExpressionStmt)"];
n482 -> n604;
n605 [label="expression (MethodCallExpr)"];
n604 -> n605;
n606 [label="name (SimpleName)"];
n605 -> n606;
n607 [label="identifier='using'"];
n606 -> n607;
n608 [label="scope (NameExpr)"];
n605 -> n608;
n609 [label="name (SimpleName)"];
n608 -> n609;
n610 [label="identifier='req'"];
n609 -> n610;
n611 [label="arguments"];
n605 -> n611;
n612 [label="argument (StringLiteralExpr)"];
n611 -> n612;
n613 [label="value='The lender and borrower cannot be the same identity.'"];
n612 -> n613;
n614 [label="argument (MethodCallExpr)"];
n611 -> n614;
n615 [label="name (SimpleName)"];
n614 -> n615;
n616 [label="identifier='equals'"];
n615 -> n616;
n617 [label="scope (MethodCallExpr)"];
n614 -> n617;
n618 [label="name (SimpleName)"];
n617 -> n618;
n619 [label="identifier='getBorrower'"];
n618 -> n619;
n620 [label="scope (NameExpr)"];
n617 -> n620;
n621 [label="name (SimpleName)"];
n620 -> n621;
n622 [label="identifier='obligation'"];
n621 -> n622;
n623 [label="arguments"];
n614 -> n623;
n624 [label="argument (MethodCallExpr)"];
n623 -> n624;
n625 [label="name (SimpleName)"];
n624 -> n625;
n626 [label="identifier='getLender'"];
n625 -> n626;
n627 [label="scope (NameExpr)"];
n624 -> n627;
n628 [label="name (SimpleName)"];
n627 -> n628;
n629 [label="identifier='obligation'"];
n628 -> n629;
n630 [label="statement (ExpressionStmt)"];
n482 -> n630;
n631 [label="expression (MethodCallExpr)"];
n630 -> n631;
n632 [label="name (SimpleName)"];
n631 -> n632;
n633 [label="identifier='using'"];
n632 -> n633;
n634 [label="scope (NameExpr)"];
n631 -> n634;
n635 [label="name (SimpleName)"];
n634 -> n635;
n636 [label="identifier='req'"];
n635 -> n636;
n637 [label="arguments"];
n631 -> n637;
n638 [label="argument (StringLiteralExpr)"];
n637 -> n638;
n639 [label="value='Both lender and borrower together only may sign obligation issue transaction.'"];
n638 -> n639;
n640 [label="argument (MethodCallExpr)"];
n637 -> n640;
n641 [label="name (SimpleName)"];
n640 -> n641;
n642 [label="identifier='equals'"];
n641 -> n642;
n643 [label="scope (NameExpr)"];
n640 -> n643;
n644 [label="name (SimpleName)"];
n643 -> n644;
n645 [label="identifier='signers'"];
n644 -> n645;
n646 [label="arguments"];
n640 -> n646;
n647 [label="argument (MethodCallExpr)"];
n646 -> n647;
n648 [label="name (SimpleName)"];
n647 -> n648;
n649 [label="identifier='keysFromParticipants'"];
n648 -> n649;
n650 [label="arguments"];
n647 -> n650;
n651 [label="argument (NameExpr)"];
n650 -> n651;
n652 [label="name (SimpleName)"];
n651 -> n652;
n653 [label="identifier='obligation'"];
n652 -> n653;
n654 [label="statement (ReturnStmt)"];
n482 -> n654;
n655 [label="expression (NullLiteralExpr)"];
n654 -> n655;
n656 [label="parameters"];
n479 -> n656;
n657 [label="parameter (Parameter)"];
n656 -> n657;
n658 [label="isVarArgs='false'"];
n657 -> n658;
n659 [label="name (SimpleName)"];
n657 -> n659;
n660 [label="identifier='req'"];
n659 -> n660;
n661 [label="type (UnknownType)"];
n657 -> n661;
n662 [label="type (VoidType)"];
n471 -> n662;
n663 [label="name (SimpleName)"];
n471 -> n663;
n664 [label="identifier='verifyIssue'"];
n663 -> n664;
n665 [label="modifiers"];
n471 -> n665;
n666 [label="modifier (Modifier)"];
n665 -> n666;
n667 [label="keyword='PRIVATE'"];
n666 -> n667;
n668 [label="parameters"];
n471 -> n668;
n669 [label="parameter (Parameter)"];
n668 -> n669;
n670 [label="isVarArgs='false'"];
n669 -> n670;
n671 [label="name (SimpleName)"];
n669 -> n671;
n672 [label="identifier='tx'"];
n671 -> n672;
n673 [label="type (ClassOrInterfaceType)"];
n669 -> n673;
n674 [label="name (SimpleName)"];
n673 -> n674;
n675 [label="identifier='LedgerTransaction'"];
n674 -> n675;
n676 [label="parameter (Parameter)"];
n668 -> n676;
n677 [label="isVarArgs='false'"];
n676 -> n677;
n678 [label="name (SimpleName)"];
n676 -> n678;
n679 [label="identifier='signers'"];
n678 -> n679;
n680 [label="type (ClassOrInterfaceType)"];
n676 -> n680;
n681 [label="name (SimpleName)"];
n680 -> n681;
n682 [label="identifier='Set'"];
n681 -> n682;
n683 [label="typeArguments"];
n680 -> n683;
n684 [label="typeArgument (ClassOrInterfaceType)"];
n683 -> n684;
n685 [label="name (SimpleName)"];
n684 -> n685;
n686 [label="identifier='PublicKey'"];
n685 -> n686;
n687 [label="member (MethodDeclaration)"];
n201 -> n687;
n688 [label="body (BlockStmt)"];
n687 -> n688;
n689 [label="statements"];
n688 -> n689;
n690 [label="statement (ExpressionStmt)"];
n689 -> n690;
n691 [label="expression (MethodCallExpr)"];
n690 -> n691;
n692 [label="name (SimpleName)"];
n691 -> n692;
n693 [label="identifier='requireThat'"];
n692 -> n693;
n694 [label="arguments"];
n691 -> n694;
n695 [label="argument (LambdaExpr)"];
n694 -> n695;
n696 [label="isEnclosingParameters='false'"];
n695 -> n696;
n697 [label="body (BlockStmt)"];
n695 -> n697;
n698 [label="statements"];
n697 -> n698;
n699 [label="statement (ExpressionStmt)"];
n698 -> n699;
n700 [label="expression (VariableDeclarationExpr)"];
n699 -> n700;
n701 [label="variables"];
n700 -> n701;
n702 [label="variable (VariableDeclarator)"];
n701 -> n702;
n703 [label="initializer (CastExpr)"];
n702 -> n703;
n704 [label="expression (MethodCallExpr)"];
n703 -> n704;
n705 [label="name (SimpleName)"];
n704 -> n705;
n706 [label="identifier='get'"];
n705 -> n706;
n707 [label="scope (MethodCallExpr)"];
n704 -> n707;
n708 [label="name (SimpleName)"];
n707 -> n708;
n709 [label="identifier='getInputStates'"];
n708 -> n709;
n710 [label="scope (NameExpr)"];
n707 -> n710;
n711 [label="name (SimpleName)"];
n710 -> n711;
n712 [label="identifier='tx'"];
n711 -> n712;
n713 [label="arguments"];
n704 -> n713;
n714 [label="argument (IntegerLiteralExpr)"];
n713 -> n714;
n715 [label="value='0'"];
n714 -> n715;
n716 [label="type (ClassOrInterfaceType)"];
n703 -> n716;
n717 [label="name (SimpleName)"];
n716 -> n717;
n718 [label="identifier='IOUState'"];
n717 -> n718;
n719 [label="name (SimpleName)"];
n702 -> n719;
n720 [label="identifier='inputObligation'"];
n719 -> n720;
n721 [label="type (ClassOrInterfaceType)"];
n702 -> n721;
n722 [label="name (SimpleName)"];
n721 -> n722;
n723 [label="identifier='IOUState'"];
n722 -> n723;
n724 [label="statement (ExpressionStmt)"];
n698 -> n724;
n725 [label="expression (VariableDeclarationExpr)"];
n724 -> n725;
n726 [label="variables"];
n725 -> n726;
n727 [label="variable (VariableDeclarator)"];
n726 -> n727;
n728 [label="initializer (CastExpr)"];
n727 -> n728;
n729 [label="expression (MethodCallExpr)"];
n728 -> n729;
n730 [label="name (SimpleName)"];
n729 -> n730;
n731 [label="identifier='get'"];
n730 -> n731;
n732 [label="scope (MethodCallExpr)"];
n729 -> n732;
n733 [label="name (SimpleName)"];
n732 -> n733;
n734 [label="identifier='getOutputStates'"];
n733 -> n734;
n735 [label="scope (NameExpr)"];
n732 -> n735;
n736 [label="name (SimpleName)"];
n735 -> n736;
n737 [label="identifier='tx'"];
n736 -> n737;
n738 [label="arguments"];
n729 -> n738;
n739 [label="argument (IntegerLiteralExpr)"];
n738 -> n739;
n740 [label="value='0'"];
n739 -> n740;
n741 [label="type (ClassOrInterfaceType)"];
n728 -> n741;
n742 [label="name (SimpleName)"];
n741 -> n742;
n743 [label="identifier='IOUState'"];
n742 -> n743;
n744 [label="name (SimpleName)"];
n727 -> n744;
n745 [label="identifier='outputObligation'"];
n744 -> n745;
n746 [label="type (ClassOrInterfaceType)"];
n727 -> n746;
n747 [label="name (SimpleName)"];
n746 -> n747;
n748 [label="identifier='IOUState'"];
n747 -> n748;
n749 [label="statement (ExpressionStmt)"];
n698 -> n749;
n750 [label="expression (MethodCallExpr)"];
n749 -> n750;
n751 [label="name (SimpleName)"];
n750 -> n751;
n752 [label="identifier='using'"];
n751 -> n752;
n753 [label="scope (NameExpr)"];
n750 -> n753;
n754 [label="name (SimpleName)"];
n753 -> n754;
n755 [label="identifier='req'"];
n754 -> n755;
n756 [label="arguments"];
n750 -> n756;
n757 [label="argument (StringLiteralExpr)"];
n756 -> n757;
n758 [label="value='An obligation transfer transaction should only consume one input state.'"];
n757 -> n758;
n759 [label="argument (BinaryExpr)"];
n756 -> n759;
n760 [label="operator='EQUALS'"];
n759 -> n760;
n761 [label="left (MethodCallExpr)"];
n759 -> n761;
n762 [label="name (SimpleName)"];
n761 -> n762;
n763 [label="identifier='size'"];
n762 -> n763;
n764 [label="scope (MethodCallExpr)"];
n761 -> n764;
n765 [label="name (SimpleName)"];
n764 -> n765;
n766 [label="identifier='getInputs'"];
n765 -> n766;
n767 [label="scope (NameExpr)"];
n764 -> n767;
n768 [label="name (SimpleName)"];
n767 -> n768;
n769 [label="identifier='tx'"];
n768 -> n769;
n770 [label="right (IntegerLiteralExpr)"];
n759 -> n770;
n771 [label="value='1'"];
n770 -> n771;
n772 [label="statement (ExpressionStmt)"];
n698 -> n772;
n773 [label="expression (MethodCallExpr)"];
n772 -> n773;
n774 [label="name (SimpleName)"];
n773 -> n774;
n775 [label="identifier='using'"];
n774 -> n775;
n776 [label="scope (NameExpr)"];
n773 -> n776;
n777 [label="name (SimpleName)"];
n776 -> n777;
n778 [label="identifier='req'"];
n777 -> n778;
n779 [label="arguments"];
n773 -> n779;
n780 [label="argument (StringLiteralExpr)"];
n779 -> n780;
n781 [label="value='An obligation transfer transaction should only create one output state.'"];
n780 -> n781;
n782 [label="argument (BinaryExpr)"];
n779 -> n782;
n783 [label="operator='EQUALS'"];
n782 -> n783;
n784 [label="left (MethodCallExpr)"];
n782 -> n784;
n785 [label="name (SimpleName)"];
n784 -> n785;
n786 [label="identifier='size'"];
n785 -> n786;
n787 [label="scope (MethodCallExpr)"];
n784 -> n787;
n788 [label="name (SimpleName)"];
n787 -> n788;
n789 [label="identifier='getOutputs'"];
n788 -> n789;
n790 [label="scope (NameExpr)"];
n787 -> n790;
n791 [label="name (SimpleName)"];
n790 -> n791;
n792 [label="identifier='tx'"];
n791 -> n792;
n793 [label="right (IntegerLiteralExpr)"];
n782 -> n793;
n794 [label="value='1'"];
n793 -> n794;
n795 [label="statement (ExpressionStmt)"];
n698 -> n795;
n796 [label="expression (MethodCallExpr)"];
n795 -> n796;
n797 [label="name (SimpleName)"];
n796 -> n797;
n798 [label="identifier='using'"];
n797 -> n798;
n799 [label="scope (NameExpr)"];
n796 -> n799;
n800 [label="name (SimpleName)"];
n799 -> n800;
n801 [label="identifier='req'"];
n800 -> n801;
n802 [label="arguments"];
n796 -> n802;
n803 [label="argument (StringLiteralExpr)"];
n802 -> n803;
n804 [label="value='The lender property must change in a transfer.'"];
n803 -> n804;
n805 [label="argument (BinaryExpr)"];
n802 -> n805;
n806 [label="operator='NOT_EQUALS'"];
n805 -> n806;
n807 [label="left (MethodCallExpr)"];
n805 -> n807;
n808 [label="name (SimpleName)"];
n807 -> n808;
n809 [label="identifier='getLender'"];
n808 -> n809;
n810 [label="scope (NameExpr)"];
n807 -> n810;
n811 [label="name (SimpleName)"];
n810 -> n811;
n812 [label="identifier='inputObligation'"];
n811 -> n812;
n813 [label="right (EnclosedExpr)"];
n805 -> n813;
n814 [label="inner (MethodCallExpr)"];
n813 -> n814;
n815 [label="name (SimpleName)"];
n814 -> n815;
n816 [label="identifier='getLender'"];
n815 -> n816;
n817 [label="scope (NameExpr)"];
n814 -> n817;
n818 [label="name (SimpleName)"];
n817 -> n818;
n819 [label="identifier='outputObligation'"];
n818 -> n819;
n820 [label="statement (ExpressionStmt)"];
n698 -> n820;
n821 [label="expression (MethodCallExpr)"];
n820 -> n821;
n822 [label="name (SimpleName)"];
n821 -> n822;
n823 [label="identifier='using'"];
n822 -> n823;
n824 [label="scope (NameExpr)"];
n821 -> n824;
n825 [label="name (SimpleName)"];
n824 -> n825;
n826 [label="identifier='req'"];
n825 -> n826;
n827 [label="arguments"];
n821 -> n827;
n828 [label="argument (StringLiteralExpr)"];
n827 -> n828;
n829 [label="value='The borrower, old lender and new lender only must sign an obligation transfer transaction'"];
n828 -> n829;
n830 [label="argument (MethodCallExpr)"];
n827 -> n830;
n831 [label="name (SimpleName)"];
n830 -> n831;
n832 [label="identifier='equals'"];
n831 -> n832;
n833 [label="scope (NameExpr)"];
n830 -> n833;
n834 [label="name (SimpleName)"];
n833 -> n834;
n835 [label="identifier='signers'"];
n834 -> n835;
n836 [label="arguments"];
n830 -> n836;
n837 [label="argument (MethodCallExpr)"];
n836 -> n837;
n838 [label="name (SimpleName)"];
n837 -> n838;
n839 [label="identifier='union'"];
n838 -> n839;
n840 [label="scope (NameExpr)"];
n837 -> n840;
n841 [label="name (SimpleName)"];
n840 -> n841;
n842 [label="identifier='Sets'"];
n841 -> n842;
n843 [label="arguments"];
n837 -> n843;
n844 [label="argument (MethodCallExpr)"];
n843 -> n844;
n845 [label="name (SimpleName)"];
n844 -> n845;
n846 [label="identifier='keysFromParticipants'"];
n845 -> n846;
n847 [label="arguments"];
n844 -> n847;
n848 [label="argument (NameExpr)"];
n847 -> n848;
n849 [label="name (SimpleName)"];
n848 -> n849;
n850 [label="identifier='inputObligation'"];
n849 -> n850;
n851 [label="argument (MethodCallExpr)"];
n843 -> n851;
n852 [label="name (SimpleName)"];
n851 -> n852;
n853 [label="identifier='keysFromParticipants'"];
n852 -> n853;
n854 [label="arguments"];
n851 -> n854;
n855 [label="argument (NameExpr)"];
n854 -> n855;
n856 [label="name (SimpleName)"];
n855 -> n856;
n857 [label="identifier='outputObligation'"];
n856 -> n857;
n858 [label="statement (ReturnStmt)"];
n698 -> n858;
n859 [label="expression (NullLiteralExpr)"];
n858 -> n859;
n860 [label="parameters"];
n695 -> n860;
n861 [label="parameter (Parameter)"];
n860 -> n861;
n862 [label="isVarArgs='false'"];
n861 -> n862;
n863 [label="name (SimpleName)"];
n861 -> n863;
n864 [label="identifier='req'"];
n863 -> n864;
n865 [label="type (UnknownType)"];
n861 -> n865;
n866 [label="type (VoidType)"];
n687 -> n866;
n867 [label="name (SimpleName)"];
n687 -> n867;
n868 [label="identifier='verifyTransfer'"];
n867 -> n868;
n869 [label="modifiers"];
n687 -> n869;
n870 [label="modifier (Modifier)"];
n869 -> n870;
n871 [label="keyword='PRIVATE'"];
n870 -> n871;
n872 [label="parameters"];
n687 -> n872;
n873 [label="parameter (Parameter)"];
n872 -> n873;
n874 [label="isVarArgs='false'"];
n873 -> n874;
n875 [label="name (SimpleName)"];
n873 -> n875;
n876 [label="identifier='tx'"];
n875 -> n876;
n877 [label="type (ClassOrInterfaceType)"];
n873 -> n877;
n878 [label="name (SimpleName)"];
n877 -> n878;
n879 [label="identifier='LedgerTransaction'"];
n878 -> n879;
n880 [label="parameter (Parameter)"];
n872 -> n880;
n881 [label="isVarArgs='false'"];
n880 -> n881;
n882 [label="name (SimpleName)"];
n880 -> n882;
n883 [label="identifier='signers'"];
n882 -> n883;
n884 [label="type (ClassOrInterfaceType)"];
n880 -> n884;
n885 [label="name (SimpleName)"];
n884 -> n885;
n886 [label="identifier='Set'"];
n885 -> n886;
n887 [label="typeArguments"];
n884 -> n887;
n888 [label="typeArgument (ClassOrInterfaceType)"];
n887 -> n888;
n889 [label="name (SimpleName)"];
n888 -> n889;
n890 [label="identifier='PublicKey'"];
n889 -> n890;
n891 [label="member (MethodDeclaration)"];
n201 -> n891;
n892 [label="body (BlockStmt)"];
n891 -> n892;
n893 [label="statements"];
n892 -> n893;
n894 [label="statement (ExpressionStmt)"];
n893 -> n894;
n895 [label="expression (MethodCallExpr)"];
n894 -> n895;
n896 [label="name (SimpleName)"];
n895 -> n896;
n897 [label="identifier='requireThat'"];
n896 -> n897;
n898 [label="arguments"];
n895 -> n898;
n899 [label="argument (LambdaExpr)"];
n898 -> n899;
n900 [label="isEnclosingParameters='false'"];
n899 -> n900;
n901 [label="body (BlockStmt)"];
n899 -> n901;
n902 [label="statements"];
n901 -> n902;
n903 [label="statement (ExpressionStmt)"];
n902 -> n903;
n904 [label="expression (VariableDeclarationExpr)"];
n903 -> n904;
n905 [label="variables"];
n904 -> n905;
n906 [label="variable (VariableDeclarator)"];
n905 -> n906;
n907 [label="initializer (MethodCallExpr)"];
n906 -> n907;
n908 [label="name (SimpleName)"];
n907 -> n908;
n909 [label="identifier='inputsOfType'"];
n908 -> n909;
n910 [label="scope (NameExpr)"];
n907 -> n910;
n911 [label="name (SimpleName)"];
n910 -> n911;
n912 [label="identifier='tx'"];
n911 -> n912;
n913 [label="arguments"];
n907 -> n913;
n914 [label="argument (ClassExpr)"];
n913 -> n914;
n915 [label="type (ClassOrInterfaceType)"];
n914 -> n915;
n916 [label="name (SimpleName)"];
n915 -> n916;
n917 [label="identifier='IOUState'"];
n916 -> n917;
n918 [label="name (SimpleName)"];
n906 -> n918;
n919 [label="identifier='obligationInputs'"];
n918 -> n919;
n920 [label="type (ClassOrInterfaceType)"];
n906 -> n920;
n921 [label="name (SimpleName)"];
n920 -> n921;
n922 [label="identifier='List'"];
n921 -> n922;
n923 [label="typeArguments"];
n920 -> n923;
n924 [label="typeArgument (ClassOrInterfaceType)"];
n923 -> n924;
n925 [label="name (SimpleName)"];
n924 -> n925;
n926 [label="identifier='IOUState'"];
n925 -> n926;
n927 [label="statement (ExpressionStmt)"];
n902 -> n927;
n928 [label="expression (VariableDeclarationExpr)"];
n927 -> n928;
n929 [label="variables"];
n928 -> n929;
n930 [label="variable (VariableDeclarator)"];
n929 -> n930;
n931 [label="initializer (MethodCallExpr)"];
n930 -> n931;
n932 [label="name (SimpleName)"];
n931 -> n932;
n933 [label="identifier='outputsOfType'"];
n932 -> n933;
n934 [label="scope (NameExpr)"];
n931 -> n934;
n935 [label="name (SimpleName)"];
n934 -> n935;
n936 [label="identifier='tx'"];
n935 -> n936;
n937 [label="arguments"];
n931 -> n937;
n938 [label="argument (ClassExpr)"];
n937 -> n938;
n939 [label="type (ClassOrInterfaceType)"];
n938 -> n939;
n940 [label="name (SimpleName)"];
n939 -> n940;
n941 [label="identifier='IOUState'"];
n940 -> n941;
n942 [label="name (SimpleName)"];
n930 -> n942;
n943 [label="identifier='obligationOutputs'"];
n942 -> n943;
n944 [label="type (ClassOrInterfaceType)"];
n930 -> n944;
n945 [label="name (SimpleName)"];
n944 -> n945;
n946 [label="identifier='List'"];
n945 -> n946;
n947 [label="typeArguments"];
n944 -> n947;
n948 [label="typeArgument (ClassOrInterfaceType)"];
n947 -> n948;
n949 [label="name (SimpleName)"];
n948 -> n949;
n950 [label="identifier='IOUState'"];
n949 -> n950;
n951 [label="statement (ExpressionStmt)"];
n902 -> n951;
n952 [label="expression (VariableDeclarationExpr)"];
n951 -> n952;
n953 [label="variables"];
n952 -> n953;
n954 [label="variable (VariableDeclarator)"];
n953 -> n954;
n955 [label="initializer (CastExpr)"];
n954 -> n955;
n956 [label="expression (MethodCallExpr)"];
n955 -> n956;
n957 [label="name (SimpleName)"];
n956 -> n957;
n958 [label="identifier='get'"];
n957 -> n958;
n959 [label="scope (MethodCallExpr)"];
n956 -> n959;
n960 [label="name (SimpleName)"];
n959 -> n960;
n961 [label="identifier='getInputStates'"];
n960 -> n961;
n962 [label="scope (NameExpr)"];
n959 -> n962;
n963 [label="name (SimpleName)"];
n962 -> n963;
n964 [label="identifier='tx'"];
n963 -> n964;
n965 [label="arguments"];
n956 -> n965;
n966 [label="argument (IntegerLiteralExpr)"];
n965 -> n966;
n967 [label="value='0'"];
n966 -> n967;
n968 [label="type (ClassOrInterfaceType)"];
n955 -> n968;
n969 [label="name (SimpleName)"];
n968 -> n969;
n970 [label="identifier='IOUState'"];
n969 -> n970;
n971 [label="name (SimpleName)"];
n954 -> n971;
n972 [label="identifier='inputObligation'"];
n971 -> n972;
n973 [label="type (ClassOrInterfaceType)"];
n954 -> n973;
n974 [label="name (SimpleName)"];
n973 -> n974;
n975 [label="identifier='IOUState'"];
n974 -> n975;
n976 [label="statement (ExpressionStmt)"];
n902 -> n976;
n977 [label="expression (VariableDeclarationExpr)"];
n976 -> n977;
n978 [label="variables"];
n977 -> n978;
n979 [label="variable (VariableDeclarator)"];
n978 -> n979;
n980 [label="initializer (CastExpr)"];
n979 -> n980;
n981 [label="expression (MethodCallExpr)"];
n980 -> n981;
n982 [label="name (SimpleName)"];
n981 -> n982;
n983 [label="identifier='get'"];
n982 -> n983;
n984 [label="scope (MethodCallExpr)"];
n981 -> n984;
n985 [label="name (SimpleName)"];
n984 -> n985;
n986 [label="identifier='getOutputStates'"];
n985 -> n986;
n987 [label="scope (NameExpr)"];
n984 -> n987;
n988 [label="name (SimpleName)"];
n987 -> n988;
n989 [label="identifier='tx'"];
n988 -> n989;
n990 [label="arguments"];
n981 -> n990;
n991 [label="argument (IntegerLiteralExpr)"];
n990 -> n991;
n992 [label="value='0'"];
n991 -> n992;
n993 [label="type (ClassOrInterfaceType)"];
n980 -> n993;
n994 [label="name (SimpleName)"];
n993 -> n994;
n995 [label="identifier='IOUState'"];
n994 -> n995;
n996 [label="name (SimpleName)"];
n979 -> n996;
n997 [label="identifier='outputObligation'"];
n996 -> n997;
n998 [label="type (ClassOrInterfaceType)"];
n979 -> n998;
n999 [label="name (SimpleName)"];
n998 -> n999;
n1000 [label="identifier='IOUState'"];
n999 -> n1000;
n1001 [label="statement (ExpressionStmt)"];
n902 -> n1001;
n1002 [label="expression (VariableDeclarationExpr)"];
n1001 -> n1002;
n1003 [label="variables"];
n1002 -> n1003;
n1004 [label="variable (VariableDeclarator)"];
n1003 -> n1004;
n1005 [label="initializer (MethodCallExpr)"];
n1004 -> n1005;
n1006 [label="name (SimpleName)"];
n1005 -> n1006;
n1007 [label="identifier='outputsOfType'"];
n1006 -> n1007;
n1008 [label="scope (NameExpr)"];
n1005 -> n1008;
n1009 [label="name (SimpleName)"];
n1008 -> n1009;
n1010 [label="identifier='tx'"];
n1009 -> n1010;
n1011 [label="arguments"];
n1005 -> n1011;
n1012 [label="argument (ClassExpr)"];
n1011 -> n1012;
n1013 [label="type (ClassOrInterfaceType)"];
n1012 -> n1013;
n1014 [label="name (SimpleName)"];
n1013 -> n1014;
n1015 [label="identifier='State'"];
n1014 -> n1015;
n1016 [label="scope (ClassOrInterfaceType)"];
n1013 -> n1016;
n1017 [label="name (SimpleName)"];
n1016 -> n1017;
n1018 [label="identifier='Cash'"];
n1017 -> n1018;
n1019 [label="name (SimpleName)"];
n1004 -> n1019;
n1020 [label="identifier='cash'"];
n1019 -> n1020;
n1021 [label="type (ClassOrInterfaceType)"];
n1004 -> n1021;
n1022 [label="name (SimpleName)"];
n1021 -> n1022;
n1023 [label="identifier='List'"];
n1022 -> n1023;
n1024 [label="typeArguments"];
n1021 -> n1024;
n1025 [label="typeArgument (ClassOrInterfaceType)"];
n1024 -> n1025;
n1026 [label="name (SimpleName)"];
n1025 -> n1026;
n1027 [label="identifier='State'"];
n1026 -> n1027;
n1028 [label="scope (ClassOrInterfaceType)"];
n1025 -> n1028;
n1029 [label="name (SimpleName)"];
n1028 -> n1029;
n1030 [label="identifier='Cash'"];
n1029 -> n1030;
n1031 [label="statement (ExpressionStmt)"];
n902 -> n1031;
n1032 [label="expression (VariableDeclarationExpr)"];
n1031 -> n1032;
n1033 [label="variables"];
n1032 -> n1033;
n1034 [label="variable (VariableDeclarator)"];
n1033 -> n1034;
n1035 [label="initializer (MethodCallExpr)"];
n1034 -> n1035;
n1036 [label="name (SimpleName)"];
n1035 -> n1036;
n1037 [label="identifier='collect'"];
n1036 -> n1037;
n1038 [label="scope (MethodCallExpr)"];
n1035 -> n1038;
n1039 [label="name (SimpleName)"];
n1038 -> n1039;
n1040 [label="identifier='filter'"];
n1039 -> n1040;
n1041 [label="scope (MethodCallExpr)"];
n1038 -> n1041;
n1042 [label="name (SimpleName)"];
n1041 -> n1042;
n1043 [label="identifier='stream'"];
n1042 -> n1043;
n1044 [label="scope (NameExpr)"];
n1041 -> n1044;
n1045 [label="name (SimpleName)"];
n1044 -> n1045;
n1046 [label="identifier='cash'"];
n1045 -> n1046;
n1047 [label="arguments"];
n1038 -> n1047;
n1048 [label="argument (LambdaExpr)"];
n1047 -> n1048;
n1049 [label="isEnclosingParameters='false'"];
n1048 -> n1049;
n1050 [label="body (ExpressionStmt)"];
n1048 -> n1050;
n1051 [label="expression (MethodCallExpr)"];
n1050 -> n1051;
n1052 [label="name (SimpleName)"];
n1051 -> n1052;
n1053 [label="identifier='equals'"];
n1052 -> n1053;
n1054 [label="scope (MethodCallExpr)"];
n1051 -> n1054;
n1055 [label="name (SimpleName)"];
n1054 -> n1055;
n1056 [label="identifier='getOwner'"];
n1055 -> n1056;
n1057 [label="scope (NameExpr)"];
n1054 -> n1057;
n1058 [label="name (SimpleName)"];
n1057 -> n1058;
n1059 [label="identifier='it'"];
n1058 -> n1059;
n1060 [label="arguments"];
n1051 -> n1060;
n1061 [label="argument (MethodCallExpr)"];
n1060 -> n1061;
n1062 [label="name (SimpleName)"];
n1061 -> n1062;
n1063 [label="identifier='getLender'"];
n1062 -> n1063;
n1064 [label="scope (NameExpr)"];
n1061 -> n1064;
n1065 [label="name (SimpleName)"];
n1064 -> n1065;
n1066 [label="identifier='inputObligation'"];
n1065 -> n1066;
n1067 [label="parameters"];
n1048 -> n1067;
n1068 [label="parameter (Parameter)"];
n1067 -> n1068;
n1069 [label="isVarArgs='false'"];
n1068 -> n1069;
n1070 [label="name (SimpleName)"];
n1068 -> n1070;
n1071 [label="identifier='it'"];
n1070 -> n1071;
n1072 [label="type (UnknownType)"];
n1068 -> n1072;
n1073 [label="arguments"];
n1035 -> n1073;
n1074 [label="argument (MethodCallExpr)"];
n1073 -> n1074;
n1075 [label="name (SimpleName)"];
n1074 -> n1075;
n1076 [label="identifier='toList'"];
n1075 -> n1076;
n1077 [label="scope (NameExpr)"];
n1074 -> n1077;
n1078 [label="name (SimpleName)"];
n1077 -> n1078;
n1079 [label="identifier='Collectors'"];
n1078 -> n1079;
n1080 [label="name (SimpleName)"];
n1034 -> n1080;
n1081 [label="identifier='acceptableCash'"];
n1080 -> n1081;
n1082 [label="type (ClassOrInterfaceType)"];
n1034 -> n1082;
n1083 [label="name (SimpleName)"];
n1082 -> n1083;
n1084 [label="identifier='List'"];
n1083 -> n1084;
n1085 [label="typeArguments"];
n1082 -> n1085;
n1086 [label="typeArgument (ClassOrInterfaceType)"];
n1085 -> n1086;
n1087 [label="name (SimpleName)"];
n1086 -> n1087;
n1088 [label="identifier='State'"];
n1087 -> n1088;
n1089 [label="scope (ClassOrInterfaceType)"];
n1086 -> n1089;
n1090 [label="name (SimpleName)"];
n1089 -> n1090;
n1091 [label="identifier='Cash'"];
n1090 -> n1091;
n1092 [label="statement (ExpressionStmt)"];
n902 -> n1092;
n1093 [label="expression (MethodCallExpr)"];
n1092 -> n1093;
n1094 [label="name (SimpleName)"];
n1093 -> n1094;
n1095 [label="identifier='using'"];
n1094 -> n1095;
n1096 [label="scope (NameExpr)"];
n1093 -> n1096;
n1097 [label="name (SimpleName)"];
n1096 -> n1097;
n1098 [label="identifier='req'"];
n1097 -> n1098;
n1099 [label="arguments"];
n1093 -> n1099;
n1100 [label="argument (StringLiteralExpr)"];
n1099 -> n1100;
n1101 [label="value='There must be one input obligation.'"];
n1100 -> n1101;
n1102 [label="argument (BinaryExpr)"];
n1099 -> n1102;
n1103 [label="operator='EQUALS'"];
n1102 -> n1103;
n1104 [label="left (MethodCallExpr)"];
n1102 -> n1104;
n1105 [label="name (SimpleName)"];
n1104 -> n1105;
n1106 [label="identifier='size'"];
n1105 -> n1106;
n1107 [label="scope (NameExpr)"];
n1104 -> n1107;
n1108 [label="name (SimpleName)"];
n1107 -> n1108;
n1109 [label="identifier='obligationInputs'"];
n1108 -> n1109;
n1110 [label="right (IntegerLiteralExpr)"];
n1102 -> n1110;
n1111 [label="value='1'"];
n1110 -> n1111;
n1112 [label="statement (ExpressionStmt)"];
n902 -> n1112;
n1113 [label="expression (MethodCallExpr)"];
n1112 -> n1113;
n1114 [label="name (SimpleName)"];
n1113 -> n1114;
n1115 [label="identifier='using'"];
n1114 -> n1115;
n1116 [label="scope (NameExpr)"];
n1113 -> n1116;
n1117 [label="name (SimpleName)"];
n1116 -> n1117;
n1118 [label="identifier='req'"];
n1117 -> n1118;
n1119 [label="arguments"];
n1113 -> n1119;
n1120 [label="argument (StringLiteralExpr)"];
n1119 -> n1120;
n1121 [label="value='There must be output cash.'"];
n1120 -> n1121;
n1122 [label="argument (BinaryExpr)"];
n1119 -> n1122;
n1123 [label="operator='NOT_EQUALS'"];
n1122 -> n1123;
n1124 [label="left (MethodCallExpr)"];
n1122 -> n1124;
n1125 [label="name (SimpleName)"];
n1124 -> n1125;
n1126 [label="identifier='size'"];
n1125 -> n1126;
n1127 [label="scope (NameExpr)"];
n1124 -> n1127;
n1128 [label="name (SimpleName)"];
n1127 -> n1128;
n1129 [label="identifier='cash'"];
n1128 -> n1129;
n1130 [label="right (IntegerLiteralExpr)"];
n1122 -> n1130;
n1131 [label="value='0'"];
n1130 -> n1131;
n1132 [label="statement (ExpressionStmt)"];
n902 -> n1132;
n1133 [label="expression (MethodCallExpr)"];
n1132 -> n1133;
n1134 [label="name (SimpleName)"];
n1133 -> n1134;
n1135 [label="identifier='using'"];
n1134 -> n1135;
n1136 [label="scope (NameExpr)"];
n1133 -> n1136;
n1137 [label="name (SimpleName)"];
n1136 -> n1137;
n1138 [label="identifier='req'"];
n1137 -> n1138;
n1139 [label="arguments"];
n1133 -> n1139;
n1140 [label="argument (StringLiteralExpr)"];
n1139 -> n1140;
n1141 [label="value='There must be output cash paid to the recipient.'"];
n1140 -> n1141;
n1142 [label="argument (UnaryExpr)"];
n1139 -> n1142;
n1143 [label="operator='LOGICAL_COMPLEMENT'"];
n1142 -> n1143;
n1144 [label="expression (MethodCallExpr)"];
n1142 -> n1144;
n1145 [label="name (SimpleName)"];
n1144 -> n1145;
n1146 [label="identifier='isEmpty'"];
n1145 -> n1146;
n1147 [label="scope (NameExpr)"];
n1144 -> n1147;
n1148 [label="name (SimpleName)"];
n1147 -> n1148;
n1149 [label="identifier='acceptableCash'"];
n1148 -> n1149;
n1150 [label="statement (ExpressionStmt)"];
n902 -> n1150;
n1151 [label="expression (MethodCallExpr)"];
n1150 -> n1151;
n1152 [label="name (SimpleName)"];
n1151 -> n1152;
n1153 [label="identifier='using'"];
n1152 -> n1153;
n1154 [label="scope (NameExpr)"];
n1151 -> n1154;
n1155 [label="name (SimpleName)"];
n1154 -> n1155;
n1156 [label="identifier='req'"];
n1155 -> n1156;
n1157 [label="arguments"];
n1151 -> n1157;
n1158 [label="argument (StringLiteralExpr)"];
n1157 -> n1158;
n1159 [label="value='The amount settled should be equal to amount in initial contract.'"];
n1158 -> n1159;
n1160 [label="argument (BinaryExpr)"];
n1157 -> n1160;
n1161 [label="operator='EQUALS'"];
n1160 -> n1161;
n1162 [label="left (MethodCallExpr)"];
n1160 -> n1162;
n1163 [label="name (SimpleName)"];
n1162 -> n1163;
n1164 [label="identifier='getQuantity'"];
n1163 -> n1164;
n1165 [label="scope (MethodCallExpr)"];
n1162 -> n1165;
n1166 [label="name (SimpleName)"];
n1165 -> n1166;
n1167 [label="identifier='withoutIssuer'"];
n1166 -> n1167;
n1168 [label="arguments"];
n1165 -> n1168;
n1169 [label="argument (MethodCallExpr)"];
n1168 -> n1169;
n1170 [label="name (SimpleName)"];
n1169 -> n1170;
n1171 [label="identifier='sumCash'"];
n1170 -> n1171;
n1172 [label="arguments"];
n1169 -> n1172;
n1173 [label="argument (NameExpr)"];
n1172 -> n1173;
n1174 [label="name (SimpleName)"];
n1173 -> n1174;
n1175 [label="identifier='acceptableCash'"];
n1174 -> n1175;
n1176 [label="right (MethodCallExpr)"];
n1160 -> n1176;
n1177 [label="name (SimpleName)"];
n1176 -> n1177;
n1178 [label="identifier='getQuantity'"];
n1177 -> n1178;
n1179 [label="scope (MethodCallExpr)"];
n1176 -> n1179;
n1180 [label="name (SimpleName)"];
n1179 -> n1180;
n1181 [label="identifier='getValue'"];
n1180 -> n1181;
n1182 [label="scope (NameExpr)"];
n1179 -> n1182;
n1183 [label="name (SimpleName)"];
n1182 -> n1183;
n1184 [label="identifier='inputObligation'"];
n1183 -> n1184;
n1185 [label="statement (ExpressionStmt)"];
n902 -> n1185;
n1186 [label="expression (MethodCallExpr)"];
n1185 -> n1186;
n1187 [label="name (SimpleName)"];
n1186 -> n1187;
n1188 [label="identifier='using'"];
n1187 -> n1188;
n1189 [label="scope (NameExpr)"];
n1186 -> n1189;
n1190 [label="name (SimpleName)"];
n1189 -> n1190;
n1191 [label="identifier='req'"];
n1190 -> n1191;
n1192 [label="arguments"];
n1186 -> n1192;
n1193 [label="argument (StringLiteralExpr)"];
n1192 -> n1193;
n1194 [label="value='There must be no output obligation as it has been fully settled.'"];
n1193 -> n1194;
n1195 [label="argument (MethodCallExpr)"];
n1192 -> n1195;
n1196 [label="name (SimpleName)"];
n1195 -> n1196;
n1197 [label="identifier='isEmpty'"];
n1196 -> n1197;
n1198 [label="scope (NameExpr)"];
n1195 -> n1198;
n1199 [label="name (SimpleName)"];
n1198 -> n1199;
n1200 [label="identifier='obligationOutputs'"];
n1199 -> n1200;
n1201 [label="statement (ExpressionStmt)"];
n902 -> n1201;
n1202 [label="expression (MethodCallExpr)"];
n1201 -> n1202;
n1203 [label="name (SimpleName)"];
n1202 -> n1203;
n1204 [label="identifier='using'"];
n1203 -> n1204;
n1205 [label="scope (NameExpr)"];
n1202 -> n1205;
n1206 [label="name (SimpleName)"];
n1205 -> n1206;
n1207 [label="identifier='req'"];
n1206 -> n1207;
n1208 [label="arguments"];
n1202 -> n1208;
n1209 [label="argument (StringLiteralExpr)"];
n1208 -> n1209;
n1210 [label="value='Both lender and borrower together only may sign obligation issue transaction.'"];
n1209 -> n1210;
n1211 [label="argument (MethodCallExpr)"];
n1208 -> n1211;
n1212 [label="name (SimpleName)"];
n1211 -> n1212;
n1213 [label="identifier='equals'"];
n1212 -> n1213;
n1214 [label="scope (NameExpr)"];
n1211 -> n1214;
n1215 [label="name (SimpleName)"];
n1214 -> n1215;
n1216 [label="identifier='signers'"];
n1215 -> n1216;
n1217 [label="arguments"];
n1211 -> n1217;
n1218 [label="argument (MethodCallExpr)"];
n1217 -> n1218;
n1219 [label="name (SimpleName)"];
n1218 -> n1219;
n1220 [label="identifier='keysFromParticipants'"];
n1219 -> n1220;
n1221 [label="arguments"];
n1218 -> n1221;
n1222 [label="argument (NameExpr)"];
n1221 -> n1222;
n1223 [label="name (SimpleName)"];
n1222 -> n1223;
n1224 [label="identifier='inputObligation'"];
n1223 -> n1224;
n1225 [label="statement (ReturnStmt)"];
n902 -> n1225;
n1226 [label="expression (NullLiteralExpr)"];
n1225 -> n1226;
n1227 [label="parameters"];
n899 -> n1227;
n1228 [label="parameter (Parameter)"];
n1227 -> n1228;
n1229 [label="isVarArgs='false'"];
n1228 -> n1229;
n1230 [label="name (SimpleName)"];
n1228 -> n1230;
n1231 [label="identifier='req'"];
n1230 -> n1231;
n1232 [label="type (UnknownType)"];
n1228 -> n1232;
n1233 [label="type (VoidType)"];
n891 -> n1233;
n1234 [label="name (SimpleName)"];
n891 -> n1234;
n1235 [label="identifier='verifySettle'"];
n1234 -> n1235;
n1236 [label="modifiers"];
n891 -> n1236;
n1237 [label="modifier (Modifier)"];
n1236 -> n1237;
n1238 [label="keyword='PRIVATE'"];
n1237 -> n1238;
n1239 [label="parameters"];
n891 -> n1239;
n1240 [label="parameter (Parameter)"];
n1239 -> n1240;
n1241 [label="isVarArgs='false'"];
n1240 -> n1241;
n1242 [label="name (SimpleName)"];
n1240 -> n1242;
n1243 [label="identifier='tx'"];
n1242 -> n1243;
n1244 [label="type (ClassOrInterfaceType)"];
n1240 -> n1244;
n1245 [label="name (SimpleName)"];
n1244 -> n1245;
n1246 [label="identifier='LedgerTransaction'"];
n1245 -> n1246;
n1247 [label="parameter (Parameter)"];
n1239 -> n1247;
n1248 [label="isVarArgs='false'"];
n1247 -> n1248;
n1249 [label="name (SimpleName)"];
n1247 -> n1249;
n1250 [label="identifier='signers'"];
n1249 -> n1250;
n1251 [label="type (ClassOrInterfaceType)"];
n1247 -> n1251;
n1252 [label="name (SimpleName)"];
n1251 -> n1252;
n1253 [label="identifier='Set'"];
n1252 -> n1253;
n1254 [label="typeArguments"];
n1251 -> n1254;
n1255 [label="typeArgument (ClassOrInterfaceType)"];
n1254 -> n1255;
n1256 [label="name (SimpleName)"];
n1255 -> n1256;
n1257 [label="identifier='PublicKey'"];
n1256 -> n1257;
n1258 [label="modifiers"];
n193 -> n1258;
n1259 [label="modifier (Modifier)"];
n1258 -> n1259;
n1260 [label="keyword='PUBLIC'"];
n1259 -> n1260;
}