---
root(Type=CompilationUnit): 
    packageDeclaration(Type=PackageDeclaration): 
        name(Type=Name): 
            identifier: "templates"
    imports: 
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Suspendable"
                qualifier(Type=Name): 
                    identifier: "fibers"
                    qualifier(Type=Name): 
                        identifier: "paralleluniverse"
                        qualifier(Type=Name): 
                            identifier: "co"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "ImmutableList"
                qualifier(Type=Name): 
                    identifier: "collect"
                    qualifier(Type=Name): 
                        identifier: "common"
                        qualifier(Type=Name): 
                            identifier: "google"
                            qualifier(Type=Name): 
                                identifier: "com"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "ImmutableSet"
                qualifier(Type=Name): 
                    identifier: "collect"
                    qualifier(Type=Name): 
                        identifier: "common"
                        qualifier(Type=Name): 
                            identifier: "google"
                            qualifier(Type=Name): 
                                identifier: "com"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "IdentitySyncFlow"
                qualifier(Type=Name): 
                    identifier: "confidential"
                    qualifier(Type=Name): 
                        identifier: "corda"
                        qualifier(Type=Name): 
                            identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Amount"
                qualifier(Type=Name): 
                    identifier: "contracts"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Command"
                qualifier(Type=Name): 
                    identifier: "contracts"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "StateAndRef"
                qualifier(Type=Name): 
                    identifier: "contracts"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "UniqueIdentifier"
                qualifier(Type=Name): 
                    identifier: "contracts"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "true"
            isStatic: "false"
            name(Type=Name): 
                identifier: "flows"
                qualifier(Type=Name): 
                    identifier: "core"
                    qualifier(Type=Name): 
                        identifier: "corda"
                        qualifier(Type=Name): 
                            identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Party"
                qualifier(Type=Name): 
                    identifier: "identity"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "SignedTransaction"
                qualifier(Type=Name): 
                    identifier: "transactions"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "TransactionBuilder"
                qualifier(Type=Name): 
                    identifier: "transactions"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "ProgressTracker"
                qualifier(Type=Name): 
                    identifier: "utilities"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Step"
                qualifier(Type=Name): 
                    identifier: "ProgressTracker"
                    qualifier(Type=Name): 
                        identifier: "utilities"
                        qualifier(Type=Name): 
                            identifier: "core"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "PartyAndAmount"
                qualifier(Type=Name): 
                    identifier: "asset"
                    qualifier(Type=Name): 
                        identifier: "contracts"
                        qualifier(Type=Name): 
                            identifier: "finance"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "CashUtils"
                qualifier(Type=Name): 
                    identifier: "asset"
                    qualifier(Type=Name): 
                        identifier: "workflows"
                        qualifier(Type=Name): 
                            identifier: "finance"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "PublicKey"
                qualifier(Type=Name): 
                    identifier: "security"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Currency"
                qualifier(Type=Name): 
                    identifier: "util"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "List"
                qualifier(Type=Name): 
                    identifier: "util"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "getCashBalance"
                qualifier(Type=Name): 
                    identifier: "GetBalances"
                    qualifier(Type=Name): 
                        identifier: "workflows"
                        qualifier(Type=Name): 
                            identifier: "finance"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
    types: 
        - type(Type=ClassOrInterfaceDeclaration): 
            isInterface: "false"
            name(Type=SimpleName): 
                identifier: "SettleIOU"
            members: 
                - member(Type=ClassOrInterfaceDeclaration): 
                    isInterface: "false"
                    name(Type=SimpleName): 
                        identifier: "Initiator"
                    extendedTypes: 
                        - extendedType(Type=ClassOrInterfaceType): 
                            name(Type=SimpleName): 
                                identifier: "IOUBaseFlow"
                    members: 
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    name(Type=SimpleName): 
                                        identifier: "linearId"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "UniqueIdentifier"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    name(Type=SimpleName): 
                                        identifier: "amount"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Amount"
                                        typeArguments: 
                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "Currency"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    name(Type=SimpleName): 
                                        identifier: "lender"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Party"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Step"
                                        arguments: 
                                            - argument(Type=StringLiteralExpr): 
                                                value: "Performing initial steps."
                                    name(Type=SimpleName): 
                                        identifier: "INITIALISING"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Step"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Step"
                                        arguments: 
                                            - argument(Type=StringLiteralExpr): 
                                                value: "Building and verifying transaction."
                                    name(Type=SimpleName): 
                                        identifier: "BUILDING"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Step"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Step"
                                        arguments: 
                                            - argument(Type=StringLiteralExpr): 
                                                value: "Signing transaction."
                                    name(Type=SimpleName): 
                                        identifier: "SIGNING"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Step"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Step"
                                        anonymousClassBody: 
                                            - anonymousClassBody(Type=MethodDeclaration): 
                                                body(Type=BlockStmt): 
                                                    statements: 
                                                        - statement(Type=ReturnStmt): 
                                                            expression(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "tracker"
                                                                scope(Type=FieldAccessExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "Companion"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "CollectSignaturesFlow"
                                                type(Type=ClassOrInterfaceType): 
                                                    name(Type=SimpleName): 
                                                        identifier: "ProgressTracker"
                                                name(Type=SimpleName): 
                                                    identifier: "childProgressTracker"
                                                modifiers: 
                                                    - modifier(Type=Modifier): 
                                                        keyword: "PUBLIC"
                                                annotations: 
                                                    - annotation(Type=MarkerAnnotationExpr): 
                                                        name(Type=Name): 
                                                            identifier: "Override"
                                        arguments: 
                                            - argument(Type=StringLiteralExpr): 
                                                value: "Collecting counterparty signature."
                                    name(Type=SimpleName): 
                                        identifier: "COLLECTING"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Step"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Step"
                                        anonymousClassBody: 
                                            - anonymousClassBody(Type=MethodDeclaration): 
                                                body(Type=BlockStmt): 
                                                    statements: 
                                                        - statement(Type=ReturnStmt): 
                                                            expression(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "tracker"
                                                                scope(Type=FieldAccessExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "Companion"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "FinalityFlow"
                                                type(Type=ClassOrInterfaceType): 
                                                    name(Type=SimpleName): 
                                                        identifier: "ProgressTracker"
                                                name(Type=SimpleName): 
                                                    identifier: "childProgressTracker"
                                                modifiers: 
                                                    - modifier(Type=Modifier): 
                                                        keyword: "PUBLIC"
                                                annotations: 
                                                    - annotation(Type=MarkerAnnotationExpr): 
                                                        name(Type=Name): 
                                                            identifier: "Override"
                                        arguments: 
                                            - argument(Type=StringLiteralExpr): 
                                                value: "Finalising transaction."
                                    name(Type=SimpleName): 
                                        identifier: "FINALISING"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Step"
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    initializer(Type=ObjectCreationExpr): 
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "ProgressTracker"
                                        arguments: 
                                            - argument(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "INITIALISING"
                                            - argument(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "BUILDING"
                                            - argument(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "SIGNING"
                                            - argument(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "COLLECTING"
                                            - argument(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "FINALISING"
                                    name(Type=SimpleName): 
                                        identifier: "progressTracker"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "ProgressTracker"
                        - member(Type=ConstructorDeclaration): 
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=AssignExpr): 
                                            operator: "ASSIGN"
                                            target(Type=FieldAccessExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "linearId"
                                                scope(Type=ThisExpr): 
                                            value(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "linearId"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=AssignExpr): 
                                            operator: "ASSIGN"
                                            target(Type=FieldAccessExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "amount"
                                                scope(Type=ThisExpr): 
                                            value(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "amount"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=AssignExpr): 
                                            operator: "ASSIGN"
                                            target(Type=FieldAccessExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "lender"
                                                scope(Type=ThisExpr): 
                                            value(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "lender"
                            name(Type=SimpleName): 
                                identifier: "Initiator"
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PUBLIC"
                            parameters: 
                                - parameter(Type=Parameter): 
                                    isVarArgs: "false"
                                    name(Type=SimpleName): 
                                        identifier: "linearId"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "UniqueIdentifier"
                                - parameter(Type=Parameter): 
                                    isVarArgs: "false"
                                    name(Type=SimpleName): 
                                        identifier: "amount"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Amount"
                                        typeArguments: 
                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "Currency"
                                - parameter(Type=Parameter): 
                                    isVarArgs: "false"
                                    name(Type=SimpleName): 
                                        identifier: "lender"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Party"
                        - member(Type=MethodDeclaration): 
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ReturnStmt): 
                                        expression(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "progressTracker"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "ProgressTracker"
                            name(Type=SimpleName): 
                                identifier: "getProgressTracker"
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PUBLIC"
                            annotations: 
                                - annotation(Type=MarkerAnnotationExpr): 
                                    name(Type=Name): 
                                        identifier: "Override"
                        - member(Type=MethodDeclaration): 
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "setCurrentStep"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "progressTracker"
                                            arguments: 
                                                - argument(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "INITIALISING"
                                        comment(Type=LineComment): 
                                            content: " Stage 1. Retrieve obligation specified by linearId from the vault."
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getObligationByLinearId"
                                                        arguments: 
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "linearId"
                                                    name(Type=SimpleName): 
                                                        identifier: "obligationToSettle"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "StateAndRef"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "IOUState"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getData"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "getState"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "obligationToSettle"
                                                    name(Type=SimpleName): 
                                                        identifier: "inputObligation"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "IOUState"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "initiateFlow"
                                                        arguments: 
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "lender"
                                                    name(Type=SimpleName): 
                                                        identifier: "session"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "FlowSession"
                                    - statement(Type=IfStmt): 
                                        condition(Type=UnaryExpr): 
                                            operator: "LOGICAL_COMPLEMENT"
                                            expression(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "equals"
                                                scope(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "getBorrower"
                                                    scope(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "inputObligation"
                                                arguments: 
                                                    - argument(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getOurIdentity"
                                        thenStmt(Type=BlockStmt): 
                                            statements: 
                                                - statement(Type=ThrowStmt): 
                                                    expression(Type=ObjectCreationExpr): 
                                                        type(Type=ClassOrInterfaceType): 
                                                            name(Type=SimpleName): 
                                                                identifier: "FlowException"
                                                        arguments: 
                                                            - argument(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "format"
                                                                scope(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "String"
                                                                arguments: 
                                                                    - argument(Type=StringLiteralExpr): 
                                                                        value: "Settle Obligation flow must be initiated by the borrower. %s %s"
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "toString"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getBorrower"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "inputObligation"
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "toString"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getOurIdentity"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getCashBalance"
                                                        arguments: 
                                                            - argument(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "getServiceHub"
                                                            - argument(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "getToken"
                                                                scope(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "amount"
                                                    name(Type=SimpleName): 
                                                        identifier: "cashBalance"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "Amount"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "Currency"
                                        comment(Type=LineComment): 
                                            content: " Stage 4. Check we have enough cash to settle the requested amount."
                                    - statement(Type=IfStmt): 
                                        condition(Type=BinaryExpr): 
                                            operator: "LESS_EQUALS"
                                            left(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "getQuantity"
                                                scope(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "cashBalance"
                                            right(Type=LongLiteralExpr): 
                                                value: "0L"
                                        elseStmt(Type=IfStmt): 
                                            condition(Type=BinaryExpr): 
                                                operator: "LESS"
                                                left(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "getQuantity"
                                                    scope(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "cashBalance"
                                                right(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "getQuantity"
                                                    scope(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "amount"
                                            thenStmt(Type=BlockStmt): 
                                                statements: 
                                                    - statement(Type=ThrowStmt): 
                                                        expression(Type=ObjectCreationExpr): 
                                                            type(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "FlowException"
                                                            arguments: 
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "format"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "String"
                                                                    arguments: 
                                                                        - argument(Type=StringLiteralExpr): 
                                                                            value: "Borrower has only %s but needs %s to settle."
                                                                        - argument(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "cashBalance"
                                                                        - argument(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "amount"
                                        thenStmt(Type=BlockStmt): 
                                            statements: 
                                                - statement(Type=ThrowStmt): 
                                                    expression(Type=ObjectCreationExpr): 
                                                        type(Type=ClassOrInterfaceType): 
                                                            name(Type=SimpleName): 
                                                                identifier: "FlowException"
                                                        arguments: 
                                                            - argument(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "format"
                                                                scope(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "String"
                                                                arguments: 
                                                                    - argument(Type=StringLiteralExpr): 
                                                                        value: "Borrower has no %s to settle."
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getToken"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "amount"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "setCurrentStep"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "progressTracker"
                                            arguments: 
                                                - argument(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "BUILDING"
                                        comment(Type=LineComment): 
                                            content: " Step 2. Building."
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getParticipantKeys"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "inputObligation"
                                                    name(Type=SimpleName): 
                                                        identifier: "requiredSigners"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "List"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "PublicKey"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "addCommand"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "addInputState"
                                                            scope(Type=ObjectCreationExpr): 
                                                                type(Type=ClassOrInterfaceType): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "TransactionBuilder"
                                                                arguments: 
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getFirstNotary"
                                                            arguments: 
                                                                - argument(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "obligationToSettle"
                                                        arguments: 
                                                            - argument(Type=ObjectCreationExpr): 
                                                                type(Type=ClassOrInterfaceType): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "Settle"
                                                                    scope(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "Commands"
                                                                        scope(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUContract"
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "requiredSigners"
                                                    name(Type=SimpleName): 
                                                        identifier: "builder"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "TransactionBuilder"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getSecond"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "generateSpend"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "CashUtils"
                                                            arguments: 
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "getServiceHub"
                                                                - argument(Type=NameExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "builder"
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "of"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "ImmutableList"
                                                                    arguments: 
                                                                        - argument(Type=ObjectCreationExpr): 
                                                                            type(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "PartyAndAmount"
                                                                            arguments: 
                                                                                - argument(Type=MethodCallExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "getLender"
                                                                                    scope(Type=NameExpr): 
                                                                                        name(Type=SimpleName): 
                                                                                            identifier: "inputObligation"
                                                                                - argument(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "amount"
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "getOurIdentityAndCert"
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "of"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "ImmutableSet"
                                                    name(Type=SimpleName): 
                                                        identifier: "cashSigningKeys"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "List"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "PublicKey"
                                        comment(Type=LineComment): 
                                            content: " Stage 7. Get some cash from the vault and add a spend to our transaction builder."
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "setCurrentStep"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "progressTracker"
                                            arguments: 
                                                - argument(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "SIGNING"
                                        comment(Type=LineComment): 
                                            content: " Stage 9. Verify and sign the transaction."
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "verify"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "builder"
                                            arguments: 
                                                - argument(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "getServiceHub"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "build"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "add"
                                                            scope(Type=MethodCallExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "addAll"
                                                                scope(Type=ObjectCreationExpr): 
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "Builder"
                                                                        scope(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "ImmutableList"
                                                                        typeArguments: 
                                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "PublicKey"
                                                                arguments: 
                                                                    - argument(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "cashSigningKeys"
                                                            arguments: 
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "getOwningKey"
                                                                    scope(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getBorrower"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "inputObligation"
                                                    name(Type=SimpleName): 
                                                        identifier: "signingKeys"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "List"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "PublicKey"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "signInitialTransaction"
                                                        scope(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "getServiceHub"
                                                        arguments: 
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "builder"
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "signingKeys"
                                                    name(Type=SimpleName): 
                                                        identifier: "ptx"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "SignedTransaction"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "setCurrentStep"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "progressTracker"
                                            arguments: 
                                                - argument(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "COLLECTING"
                                        comment(Type=LineComment): 
                                            content: " Stage 10. Get counterparty signature."
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "of"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "ImmutableSet"
                                                        arguments: 
                                                            - argument(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "session"
                                                    name(Type=SimpleName): 
                                                        identifier: "sessions"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "ImmutableSet"
                                                        typeArguments: 
                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "FlowSession"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            modifiers: 
                                                - modifier(Type=Modifier): 
                                                    keyword: "FINAL"
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "subFlow"
                                                        arguments: 
                                                            - argument(Type=ObjectCreationExpr): 
                                                                type(Type=ClassOrInterfaceType): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "CollectSignaturesFlow"
                                                                arguments: 
                                                                    - argument(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "ptx"
                                                                    - argument(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "sessions"
                                                                    - argument(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "signingKeys"
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "childProgressTracker"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "COLLECTING"
                                                    name(Type=SimpleName): 
                                                        identifier: "stx"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "SignedTransaction"
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "setCurrentStep"
                                            scope(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "progressTracker"
                                            arguments: 
                                                - argument(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "FINALISING"
                                        comment(Type=LineComment): 
                                            content: " Stage 11. Finalize the transaction."
                                    - statement(Type=ReturnStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "subFlow"
                                            arguments: 
                                                - argument(Type=ObjectCreationExpr): 
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "FinalityFlow"
                                                    arguments: 
                                                        - argument(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "stx"
                                                        - argument(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "sessions"
                                                        - argument(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "childProgressTracker"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "FINALISING"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "SignedTransaction"
                            name(Type=SimpleName): 
                                identifier: "call"
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PUBLIC"
                            thrownExceptions: 
                                - thrownException(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "FlowException"
                            annotations: 
                                - annotation(Type=MarkerAnnotationExpr): 
                                    name(Type=Name): 
                                        identifier: "Suspendable"
                                - annotation(Type=MarkerAnnotationExpr): 
                                    name(Type=Name): 
                                        identifier: "Override"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                        - modifier(Type=Modifier): 
                            keyword: "STATIC"
                    annotations: 
                        - annotation(Type=MarkerAnnotationExpr): 
                            name(Type=Name): 
                                identifier: "InitiatingFlow"
                        - annotation(Type=MarkerAnnotationExpr): 
                            name(Type=Name): 
                                identifier: "StartableByRPC"
                - member(Type=ClassOrInterfaceDeclaration): 
                    isInterface: "false"
                    name(Type=SimpleName): 
                        identifier: "Responder"
                    extendedTypes: 
                        - extendedType(Type=ClassOrInterfaceType): 
                            name(Type=SimpleName): 
                                identifier: "FlowLogic"
                            typeArguments: 
                                - typeArgument(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "SignedTransaction"
                    members: 
                        - member(Type=FieldDeclaration): 
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PRIVATE"
                                - modifier(Type=Modifier): 
                                    keyword: "FINAL"
                            variables: 
                                - variable(Type=VariableDeclarator): 
                                    name(Type=SimpleName): 
                                        identifier: "otherFlow"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "FlowSession"
                        - member(Type=ConstructorDeclaration): 
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=AssignExpr): 
                                            operator: "ASSIGN"
                                            target(Type=FieldAccessExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "otherFlow"
                                                scope(Type=ThisExpr): 
                                            value(Type=NameExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "otherFlow"
                            name(Type=SimpleName): 
                                identifier: "Responder"
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PUBLIC"
                            parameters: 
                                - parameter(Type=Parameter): 
                                    isVarArgs: "false"
                                    name(Type=SimpleName): 
                                        identifier: "otherFlow"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "FlowSession"
                        - member(Type=MethodDeclaration): 
                            body(Type=BlockStmt): 
                                statements: 
                                    - statement(Type=ExpressionStmt): 
                                        expression(Type=VariableDeclarationExpr): 
                                            variables: 
                                                - variable(Type=VariableDeclarator): 
                                                    initializer(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "subFlow"
                                                        arguments: 
                                                            - argument(Type=ObjectCreationExpr): 
                                                                type(Type=ClassOrInterfaceType): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "SignTxFlowNoChecking"
                                                                    scope(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUBaseFlow"
                                                                arguments: 
                                                                    - argument(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "otherFlow"
                                                                    - argument(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "tracker"
                                                                        scope(Type=FieldAccessExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "Companion"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "SignTransactionFlow"
                                                    name(Type=SimpleName): 
                                                        identifier: "stx"
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "SignedTransaction"
                                    - statement(Type=ReturnStmt): 
                                        expression(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "subFlow"
                                            arguments: 
                                                - argument(Type=ObjectCreationExpr): 
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "ReceiveFinalityFlow"
                                                    arguments: 
                                                        - argument(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "otherFlow"
                                                        - argument(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "getId"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "stx"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "SignedTransaction"
                            name(Type=SimpleName): 
                                identifier: "call"
                            modifiers: 
                                - modifier(Type=Modifier): 
                                    keyword: "PUBLIC"
                            thrownExceptions: 
                                - thrownException(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "FlowException"
                            annotations: 
                                - annotation(Type=MarkerAnnotationExpr): 
                                    name(Type=Name): 
                                        identifier: "Suspendable"
                                - annotation(Type=MarkerAnnotationExpr): 
                                    name(Type=Name): 
                                        identifier: "Override"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                        - modifier(Type=Modifier): 
                            keyword: "STATIC"
                    annotations: 
                        - annotation(Type=SingleMemberAnnotationExpr): 
                            memberValue(Type=ClassExpr): 
                                type(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "Initiator"
                            name(Type=Name): 
                                identifier: "InitiatedBy"
            modifiers: 
                - modifier(Type=Modifier): 
                    keyword: "PUBLIC"
...