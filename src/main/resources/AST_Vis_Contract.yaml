---
root(Type=CompilationUnit): 
    packageDeclaration(Type=PackageDeclaration): 
        name(Type=Name): 
            identifier: "templates"
    imports: 
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Sets"
                qualifier(Type=Name): 
                    identifier: "collect"
                    qualifier(Type=Name): 
                        identifier: "common"
                        qualifier(Type=Name): 
                            identifier: "google"
                            qualifier(Type=Name): 
                                identifier: "com"
        - import(Type=ImportDeclaration): 
            isAsterisk: "true"
            isStatic: "false"
            name(Type=Name): 
                identifier: "contracts"
                qualifier(Type=Name): 
                    identifier: "core"
                    qualifier(Type=Name): 
                        identifier: "corda"
                        qualifier(Type=Name): 
                            identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "AbstractParty"
                qualifier(Type=Name): 
                    identifier: "identity"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "LedgerTransaction"
                qualifier(Type=Name): 
                    identifier: "transactions"
                    qualifier(Type=Name): 
                        identifier: "core"
                        qualifier(Type=Name): 
                            identifier: "corda"
                            qualifier(Type=Name): 
                                identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Cash"
                qualifier(Type=Name): 
                    identifier: "asset"
                    qualifier(Type=Name): 
                        identifier: "contracts"
                        qualifier(Type=Name): 
                            identifier: "finance"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "PublicKey"
                qualifier(Type=Name): 
                    identifier: "security"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "HashSet"
                qualifier(Type=Name): 
                    identifier: "util"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "List"
                qualifier(Type=Name): 
                    identifier: "util"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Set"
                qualifier(Type=Name): 
                    identifier: "util"
                    qualifier(Type=Name): 
                        identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "false"
            name(Type=Name): 
                identifier: "Collectors"
                qualifier(Type=Name): 
                    identifier: "stream"
                    qualifier(Type=Name): 
                        identifier: "util"
                        qualifier(Type=Name): 
                            identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "toSet"
                qualifier(Type=Name): 
                    identifier: "Collectors"
                    qualifier(Type=Name): 
                        identifier: "stream"
                        qualifier(Type=Name): 
                            identifier: "util"
                            qualifier(Type=Name): 
                                identifier: "java"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "requireSingleCommand"
                qualifier(Type=Name): 
                    identifier: "ContractsDSL"
                    qualifier(Type=Name): 
                        identifier: "contracts"
                        qualifier(Type=Name): 
                            identifier: "core"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "requireThat"
                qualifier(Type=Name): 
                    identifier: "ContractsDSL"
                    qualifier(Type=Name): 
                        identifier: "contracts"
                        qualifier(Type=Name): 
                            identifier: "core"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "withoutIssuer"
                qualifier(Type=Name): 
                    identifier: "Structures"
                    qualifier(Type=Name): 
                        identifier: "contracts"
                        qualifier(Type=Name): 
                            identifier: "core"
                            qualifier(Type=Name): 
                                identifier: "corda"
                                qualifier(Type=Name): 
                                    identifier: "net"
        - import(Type=ImportDeclaration): 
            isAsterisk: "false"
            isStatic: "true"
            name(Type=Name): 
                identifier: "sumCash"
                qualifier(Type=Name): 
                    identifier: "StateSumming"
                    qualifier(Type=Name): 
                        identifier: "utils"
                        qualifier(Type=Name): 
                            identifier: "contracts"
                            qualifier(Type=Name): 
                                identifier: "finance"
                                qualifier(Type=Name): 
                                    identifier: "corda"
                                    qualifier(Type=Name): 
                                        identifier: "net"
    types: 
        - type(Type=ClassOrInterfaceDeclaration): 
            isInterface: "false"
            name(Type=SimpleName): 
                identifier: "IOUContract"
            implementedTypes: 
                - implementedType(Type=ClassOrInterfaceType): 
                    name(Type=SimpleName): 
                        identifier: "Contract"
            members: 
                - member(Type=FieldDeclaration): 
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                        - modifier(Type=Modifier): 
                            keyword: "STATIC"
                        - modifier(Type=Modifier): 
                            keyword: "FINAL"
                    variables: 
                        - variable(Type=VariableDeclarator): 
                            initializer(Type=StringLiteralExpr): 
                                value: "com.example.contract.IOUContract"
                            name(Type=SimpleName): 
                                identifier: "ID"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "String"
                - member(Type=ClassOrInterfaceDeclaration): 
                    isInterface: "true"
                    name(Type=SimpleName): 
                        identifier: "Commands"
                    extendedTypes: 
                        - extendedType(Type=ClassOrInterfaceType): 
                            name(Type=SimpleName): 
                                identifier: "CommandData"
                    members: 
                        - member(Type=ClassOrInterfaceDeclaration): 
                            isInterface: "false"
                            name(Type=SimpleName): 
                                identifier: "Issue"
                            extendedTypes: 
                                - extendedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "TypeOnlyCommandData"
                            implementedTypes: 
                                - implementedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "Commands"
                        - member(Type=ClassOrInterfaceDeclaration): 
                            isInterface: "false"
                            name(Type=SimpleName): 
                                identifier: "Transfer"
                            extendedTypes: 
                                - extendedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "TypeOnlyCommandData"
                            implementedTypes: 
                                - implementedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "Commands"
                        - member(Type=ClassOrInterfaceDeclaration): 
                            isInterface: "false"
                            name(Type=SimpleName): 
                                identifier: "Settle"
                            extendedTypes: 
                                - extendedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "TypeOnlyCommandData"
                            implementedTypes: 
                                - implementedType(Type=ClassOrInterfaceType): 
                                    name(Type=SimpleName): 
                                        identifier: "Commands"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ReturnStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "collect"
                                    scope(Type=MethodCallExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "map"
                                        scope(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "stream"
                                            scope(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "getParticipants"
                                                scope(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "obligation"
                                        arguments: 
                                            - argument(Type=MethodReferenceExpr): 
                                                identifier: "getOwningKey"
                                                scope(Type=TypeExpr): 
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "AbstractParty"
                                    arguments: 
                                        - argument(Type=MethodCallExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "toSet"
                    type(Type=ClassOrInterfaceType): 
                        name(Type=SimpleName): 
                            identifier: "Set"
                        typeArguments: 
                            - typeArgument(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "PublicKey"
                    name(Type=SimpleName): 
                        identifier: "keysFromParticipants"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PRIVATE"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "obligation"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "IOUState"
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ExpressionStmt): 
                                expression(Type=VariableDeclarationExpr): 
                                    modifiers: 
                                        - modifier(Type=Modifier): 
                                            keyword: "FINAL"
                                    variables: 
                                        - variable(Type=VariableDeclarator): 
                                            initializer(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "requireSingleCommand"
                                                arguments: 
                                                    - argument(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getCommands"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "tx"
                                                    - argument(Type=ClassExpr): 
                                                        type(Type=ClassOrInterfaceType): 
                                                            name(Type=SimpleName): 
                                                                identifier: "Commands"
                                            name(Type=SimpleName): 
                                                identifier: "command"
                                            type(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "CommandWithParties"
                                                typeArguments: 
                                                    - typeArgument(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "Commands"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=VariableDeclarationExpr): 
                                    modifiers: 
                                        - modifier(Type=Modifier): 
                                            keyword: "FINAL"
                                    variables: 
                                        - variable(Type=VariableDeclarator): 
                                            initializer(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "getValue"
                                                scope(Type=NameExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "command"
                                            name(Type=SimpleName): 
                                                identifier: "commandData"
                                            type(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "Commands"
                            - statement(Type=ExpressionStmt): 
                                expression(Type=VariableDeclarationExpr): 
                                    modifiers: 
                                        - modifier(Type=Modifier): 
                                            keyword: "FINAL"
                                    variables: 
                                        - variable(Type=VariableDeclarator): 
                                            initializer(Type=ObjectCreationExpr): 
                                                type(Type=ClassOrInterfaceType): 
                                                    name(Type=SimpleName): 
                                                        identifier: "HashSet"
                                                arguments: 
                                                    - argument(Type=MethodCallExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "getSigners"
                                                        scope(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "command"
                                            name(Type=SimpleName): 
                                                identifier: "setOfSigners"
                                            type(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "Set"
                                                typeArguments: 
                                                    - typeArgument(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "PublicKey"
                            - statement(Type=IfStmt): 
                                condition(Type=InstanceOfExpr): 
                                    expression(Type=NameExpr): 
                                        name(Type=SimpleName): 
                                            identifier: "commandData"
                                    type(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "Issue"
                                        scope(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Commands"
                                elseStmt(Type=IfStmt): 
                                    condition(Type=InstanceOfExpr): 
                                        expression(Type=NameExpr): 
                                            name(Type=SimpleName): 
                                                identifier: "commandData"
                                        type(Type=ClassOrInterfaceType): 
                                            name(Type=SimpleName): 
                                                identifier: "Settle"
                                            scope(Type=ClassOrInterfaceType): 
                                                name(Type=SimpleName): 
                                                    identifier: "Commands"
                                    elseStmt(Type=BlockStmt): 
                                        statements: 
                                            - statement(Type=ThrowStmt): 
                                                expression(Type=ObjectCreationExpr): 
                                                    type(Type=ClassOrInterfaceType): 
                                                        name(Type=SimpleName): 
                                                            identifier: "IllegalArgumentException"
                                                    arguments: 
                                                        - argument(Type=StringLiteralExpr): 
                                                            value: "Unrecognised command."
                                    thenStmt(Type=BlockStmt): 
                                        statements: 
                                            - statement(Type=ExpressionStmt): 
                                                expression(Type=MethodCallExpr): 
                                                    name(Type=SimpleName): 
                                                        identifier: "verifySettle"
                                                    arguments: 
                                                        - argument(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "tx"
                                                        - argument(Type=NameExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "setOfSigners"
                                thenStmt(Type=BlockStmt): 
                                    statements: 
                                        - statement(Type=ExpressionStmt): 
                                            expression(Type=MethodCallExpr): 
                                                name(Type=SimpleName): 
                                                    identifier: "verifyIssue"
                                                arguments: 
                                                    - argument(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "tx"
                                                    - argument(Type=NameExpr): 
                                                        name(Type=SimpleName): 
                                                            identifier: "setOfSigners"
                    type(Type=VoidType): 
                    name(Type=SimpleName): 
                        identifier: "verify"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PUBLIC"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "tx"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "LedgerTransaction"
                    annotations: 
                        - annotation(Type=MarkerAnnotationExpr): 
                            name(Type=Name): 
                                identifier: "Override"
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "requireThat"
                                    arguments: 
                                        - argument(Type=LambdaExpr): 
                                            isEnclosingParameters: "false"
                                            body(Type=BlockStmt): 
                                                statements: 
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=CastExpr): 
                                                                        expression(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "get"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "getOutputStates"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "tx"
                                                                            arguments: 
                                                                                - argument(Type=IntegerLiteralExpr): 
                                                                                    value: "0"
                                                                        type(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "obligation"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "No inputs should be consumed when issuing an obligation."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getInputStates"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "tx"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "0"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "Only one obligation state should be created when issuing an obligation."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getOutputStates"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "tx"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "1"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "A newly issued obligation must have a positive amount."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "GREATER"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getQuantity"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getValue"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "obligation"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "0"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "A newly issued obligation must be less than $150."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "LESS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getQuantity"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getValue"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "obligation"
                                                                    right(Type=BinaryExpr): 
                                                                        operator: "MULTIPLY"
                                                                        left(Type=IntegerLiteralExpr): 
                                                                            value: "150"
                                                                        right(Type=IntegerLiteralExpr): 
                                                                            value: "100"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "The lender and borrower cannot be the same identity."
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "equals"
                                                                    scope(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getBorrower"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "obligation"
                                                                    arguments: 
                                                                        - argument(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getLender"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "obligation"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "Both lender and borrower together only may sign obligation issue transaction."
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "equals"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "signers"
                                                                    arguments: 
                                                                        - argument(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "keysFromParticipants"
                                                                            arguments: 
                                                                                - argument(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "obligation"
                                                    - statement(Type=ReturnStmt): 
                                                        expression(Type=NullLiteralExpr): 
                                            parameters: 
                                                - parameter(Type=Parameter): 
                                                    isVarArgs: "false"
                                                    name(Type=SimpleName): 
                                                        identifier: "req"
                                                    type(Type=UnknownType): 
                    type(Type=VoidType): 
                    name(Type=SimpleName): 
                        identifier: "verifyIssue"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PRIVATE"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "tx"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "LedgerTransaction"
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "signers"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "Set"
                                typeArguments: 
                                    - typeArgument(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "PublicKey"
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "requireThat"
                                    arguments: 
                                        - argument(Type=LambdaExpr): 
                                            isEnclosingParameters: "false"
                                            body(Type=BlockStmt): 
                                                statements: 
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=CastExpr): 
                                                                        expression(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "get"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "getInputStates"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "tx"
                                                                            arguments: 
                                                                                - argument(Type=IntegerLiteralExpr): 
                                                                                    value: "0"
                                                                        type(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "inputObligation"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=CastExpr): 
                                                                        expression(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "get"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "getOutputStates"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "tx"
                                                                            arguments: 
                                                                                - argument(Type=IntegerLiteralExpr): 
                                                                                    value: "0"
                                                                        type(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "outputObligation"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "An obligation transfer transaction should only consume one input state."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getInputs"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "tx"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "1"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "An obligation transfer transaction should only create one output state."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getOutputs"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "tx"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "1"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "The lender property must change in a transfer."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "NOT_EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getLender"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "inputObligation"
                                                                    right(Type=EnclosedExpr): 
                                                                        inner(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getLender"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "outputObligation"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "The borrower, old lender and new lender only must sign an obligation transfer transaction"
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "equals"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "signers"
                                                                    arguments: 
                                                                        - argument(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "union"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "Sets"
                                                                            arguments: 
                                                                                - argument(Type=MethodCallExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "keysFromParticipants"
                                                                                    arguments: 
                                                                                        - argument(Type=NameExpr): 
                                                                                            name(Type=SimpleName): 
                                                                                                identifier: "inputObligation"
                                                                                - argument(Type=MethodCallExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "keysFromParticipants"
                                                                                    arguments: 
                                                                                        - argument(Type=NameExpr): 
                                                                                            name(Type=SimpleName): 
                                                                                                identifier: "outputObligation"
                                                    - statement(Type=ReturnStmt): 
                                                        expression(Type=NullLiteralExpr): 
                                            parameters: 
                                                - parameter(Type=Parameter): 
                                                    isVarArgs: "false"
                                                    name(Type=SimpleName): 
                                                        identifier: "req"
                                                    type(Type=UnknownType): 
                    type(Type=VoidType): 
                    name(Type=SimpleName): 
                        identifier: "verifyTransfer"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PRIVATE"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "tx"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "LedgerTransaction"
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "signers"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "Set"
                                typeArguments: 
                                    - typeArgument(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "PublicKey"
                - member(Type=MethodDeclaration): 
                    body(Type=BlockStmt): 
                        statements: 
                            - statement(Type=ExpressionStmt): 
                                expression(Type=MethodCallExpr): 
                                    name(Type=SimpleName): 
                                        identifier: "requireThat"
                                    arguments: 
                                        - argument(Type=LambdaExpr): 
                                            isEnclosingParameters: "false"
                                            body(Type=BlockStmt): 
                                                statements: 
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "inputsOfType"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "tx"
                                                                        arguments: 
                                                                            - argument(Type=ClassExpr): 
                                                                                type(Type=ClassOrInterfaceType): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "obligationInputs"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "List"
                                                                        typeArguments: 
                                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "outputsOfType"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "tx"
                                                                        arguments: 
                                                                            - argument(Type=ClassExpr): 
                                                                                type(Type=ClassOrInterfaceType): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "obligationOutputs"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "List"
                                                                        typeArguments: 
                                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=CastExpr): 
                                                                        expression(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "get"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "getInputStates"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "tx"
                                                                            arguments: 
                                                                                - argument(Type=IntegerLiteralExpr): 
                                                                                    value: "0"
                                                                        type(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "inputObligation"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=CastExpr): 
                                                                        expression(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "get"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "getOutputStates"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "tx"
                                                                            arguments: 
                                                                                - argument(Type=IntegerLiteralExpr): 
                                                                                    value: "0"
                                                                        type(Type=ClassOrInterfaceType): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "IOUState"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "outputObligation"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "IOUState"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "outputsOfType"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "tx"
                                                                        arguments: 
                                                                            - argument(Type=ClassExpr): 
                                                                                type(Type=ClassOrInterfaceType): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "State"
                                                                                    scope(Type=ClassOrInterfaceType): 
                                                                                        name(Type=SimpleName): 
                                                                                            identifier: "Cash"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "cash"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "List"
                                                                        typeArguments: 
                                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "State"
                                                                                scope(Type=ClassOrInterfaceType): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "Cash"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=VariableDeclarationExpr): 
                                                            variables: 
                                                                - variable(Type=VariableDeclarator): 
                                                                    initializer(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "collect"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "filter"
                                                                            scope(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "stream"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "cash"
                                                                            arguments: 
                                                                                - argument(Type=LambdaExpr): 
                                                                                    isEnclosingParameters: "false"
                                                                                    body(Type=ExpressionStmt): 
                                                                                        expression(Type=MethodCallExpr): 
                                                                                            name(Type=SimpleName): 
                                                                                                identifier: "equals"
                                                                                            scope(Type=MethodCallExpr): 
                                                                                                name(Type=SimpleName): 
                                                                                                    identifier: "getOwner"
                                                                                                scope(Type=NameExpr): 
                                                                                                    name(Type=SimpleName): 
                                                                                                        identifier: "it"
                                                                                            arguments: 
                                                                                                - argument(Type=MethodCallExpr): 
                                                                                                    name(Type=SimpleName): 
                                                                                                        identifier: "getLender"
                                                                                                    scope(Type=NameExpr): 
                                                                                                        name(Type=SimpleName): 
                                                                                                            identifier: "inputObligation"
                                                                                    parameters: 
                                                                                        - parameter(Type=Parameter): 
                                                                                            isVarArgs: "false"
                                                                                            name(Type=SimpleName): 
                                                                                                identifier: "it"
                                                                                            type(Type=UnknownType): 
                                                                        arguments: 
                                                                            - argument(Type=MethodCallExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "toList"
                                                                                scope(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "Collectors"
                                                                    name(Type=SimpleName): 
                                                                        identifier: "acceptableCash"
                                                                    type(Type=ClassOrInterfaceType): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "List"
                                                                        typeArguments: 
                                                                            - typeArgument(Type=ClassOrInterfaceType): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "State"
                                                                                scope(Type=ClassOrInterfaceType): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "Cash"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "There must be one input obligation."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "obligationInputs"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "1"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "There must be output cash."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "NOT_EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "size"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "cash"
                                                                    right(Type=IntegerLiteralExpr): 
                                                                        value: "0"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "There must be output cash paid to the recipient."
                                                                - argument(Type=UnaryExpr): 
                                                                    operator: "LOGICAL_COMPLEMENT"
                                                                    expression(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "isEmpty"
                                                                        scope(Type=NameExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "acceptableCash"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "The amount settled should be equal to amount in initial contract."
                                                                - argument(Type=BinaryExpr): 
                                                                    operator: "EQUALS"
                                                                    left(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getQuantity"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "withoutIssuer"
                                                                            arguments: 
                                                                                - argument(Type=MethodCallExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "sumCash"
                                                                                    arguments: 
                                                                                        - argument(Type=NameExpr): 
                                                                                            name(Type=SimpleName): 
                                                                                                identifier: "acceptableCash"
                                                                    right(Type=MethodCallExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "getQuantity"
                                                                        scope(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "getValue"
                                                                            scope(Type=NameExpr): 
                                                                                name(Type=SimpleName): 
                                                                                    identifier: "inputObligation"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "There must be no output obligation as it has been fully settled."
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "isEmpty"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "obligationOutputs"
                                                    - statement(Type=ExpressionStmt): 
                                                        expression(Type=MethodCallExpr): 
                                                            name(Type=SimpleName): 
                                                                identifier: "using"
                                                            scope(Type=NameExpr): 
                                                                name(Type=SimpleName): 
                                                                    identifier: "req"
                                                            arguments: 
                                                                - argument(Type=StringLiteralExpr): 
                                                                    value: "Both lender and borrower together only may sign obligation issue transaction."
                                                                - argument(Type=MethodCallExpr): 
                                                                    name(Type=SimpleName): 
                                                                        identifier: "equals"
                                                                    scope(Type=NameExpr): 
                                                                        name(Type=SimpleName): 
                                                                            identifier: "signers"
                                                                    arguments: 
                                                                        - argument(Type=MethodCallExpr): 
                                                                            name(Type=SimpleName): 
                                                                                identifier: "keysFromParticipants"
                                                                            arguments: 
                                                                                - argument(Type=NameExpr): 
                                                                                    name(Type=SimpleName): 
                                                                                        identifier: "inputObligation"
                                                    - statement(Type=ReturnStmt): 
                                                        expression(Type=NullLiteralExpr): 
                                            parameters: 
                                                - parameter(Type=Parameter): 
                                                    isVarArgs: "false"
                                                    name(Type=SimpleName): 
                                                        identifier: "req"
                                                    type(Type=UnknownType): 
                    type(Type=VoidType): 
                    name(Type=SimpleName): 
                        identifier: "verifySettle"
                    modifiers: 
                        - modifier(Type=Modifier): 
                            keyword: "PRIVATE"
                    parameters: 
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "tx"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "LedgerTransaction"
                        - parameter(Type=Parameter): 
                            isVarArgs: "false"
                            name(Type=SimpleName): 
                                identifier: "signers"
                            type(Type=ClassOrInterfaceType): 
                                name(Type=SimpleName): 
                                    identifier: "Set"
                                typeArguments: 
                                    - typeArgument(Type=ClassOrInterfaceType): 
                                        name(Type=SimpleName): 
                                            identifier: "PublicKey"
            modifiers: 
                - modifier(Type=Modifier): 
                    keyword: "PUBLIC"
...